//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MPSGraph, NSArray, NSDictionary;

@interface MPSGraphExecutable : NSObject
{
    MPSGraph *_graph;
    struct MLIRContext _context;
    struct OpBuilder *_builder;
    struct OwningModuleRef _originalModule;
    struct MPSSymbolTable *_symbolTable;
    unsigned long long _compilerOptions;
    struct unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPURuntime, std::__1::default_delete<GPURuntime>>, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::unique_ptr<GPURuntime, std::__1::default_delete<GPURuntime>>>>> _runtimeCache;
    struct unordered_map<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, mlir::OwningModuleRef, std::__1::hash<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::equal_to<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, mlir::OwningModuleRef>>> _optimizedModuleCache;
    struct _opaque_pthread_mutex_t _executableMutex;
    NSArray *_targetTensorArray;
    NSArray *_targetOperations;
    NSArray *_feedTensorArray;
    NSDictionary *_feeds;
    unsigned long long _options;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property unsigned long long options; // @synthesize options=_options;
- (void)encodeInternalWithMPSCommandBuffer:(id)arg1 inputsArray:(id)arg2 resultsArray:(id)arg3 executionDescriptor:(id)arg4;
- (id)runAsyncWithCommandQueue:(id)arg1 inputsArray:(id)arg2 resultsArray:(id)arg3 executionDescriptor:(id)arg4;
- (id)runWithCommandQueue:(id)arg1 inputsArray:(id)arg2 resultsArray:(id)arg3;
- (id)runInternalWithMPSCommandBuffer:(id)arg1 feedsDictionary:(id)arg2 resultsDictionary:(id)arg3 executionDescriptor:(id)arg4;
- (id)allocateTargetsForDevice:(id)arg1 inputsArray:(id)arg2;
- (struct GPURuntime *)getRuntimeForDevice:(id)arg1 module:(struct ModuleOp)arg2;
- (id)debugDescription;
- (void)dump;
- (void)dealloc;
- (void)optimizationPasses:(struct ModuleOp *)arg1;
- (_Bool)inputShapesSpecialized;
- (struct ModuleOp)specializeWithDevice:(id)arg1 inputsArray:(id)arg2;
- (void)specializeWithDevice:(id)arg1 inputShapes:(id)arg2;
- (struct ModuleOp)specializedModuleWithDevice:(id)arg1 inputShapes:(id)arg2;
- (void)recurseFeeds:(id)arg1 targetTensors:(id)arg2 targetOperations:(id)arg3;
- (void)recurseOperation:(id)arg1 operationsRecursed:(id)arg2 tensorToValueMap:(map_c15ee9ae *)arg3;
- (_Bool)isExecutableForFeeds:(id)arg1 targetTensors:(id)arg2 targetOperations:(id)arg3;
- (void)sanitizeExternalModuleWithVariableFetchHandler:(CDUnknownBlockType)arg1;
- (id)initWithMLIRSource:(id)arg1 executableDescriptor:(id)arg2;
- (id)initWithMLIRSourceFromURL:(id)arg1 executableDescriptor:(id)arg2;
- (void)initializeCommon;
- (id)initializeWithMLIRModule:(struct ModuleOp)arg1 executableDescriptor:(id)arg2;
- (id)initWithMLIRModule:(struct ModuleOp)arg1 executableDescriptor:(id)arg2;
- (id)initWithGraph:(id)arg1 feeds:(id)arg2 targetTensors:(id)arg3 targetOperations:(id)arg4;

@end

