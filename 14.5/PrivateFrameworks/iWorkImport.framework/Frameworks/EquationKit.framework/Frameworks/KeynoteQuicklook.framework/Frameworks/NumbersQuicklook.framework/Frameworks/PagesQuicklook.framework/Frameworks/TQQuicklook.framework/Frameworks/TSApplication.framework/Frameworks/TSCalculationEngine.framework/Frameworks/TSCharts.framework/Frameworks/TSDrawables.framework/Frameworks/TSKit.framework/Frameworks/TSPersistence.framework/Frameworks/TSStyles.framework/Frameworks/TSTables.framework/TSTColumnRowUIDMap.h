//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <TSPersistence/TSPObject.h>

#import <TSTables/TSCEColumnRowUIDMapping-Protocol.h>

@class TSTColumnRowUIDMapper;

@interface TSTColumnRowUIDMap : TSPObject <TSCEColumnRowUIDMapping>
{
    TSKUIDStructVectorTemplate_724280d5 _columnUidForIndex;
    TSKUIDStructVectorTemplate_724280d5 _rowUidForIndex;
    struct unordered_map<TSKUIDStruct, unsigned short, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, unsigned short>>> _columnIndexForUid;
    struct unordered_map<TSKUIDStruct, unsigned int, std::__1::hash<TSKUIDStruct>, std::__1::equal_to<TSKUIDStruct>, std::__1::allocator<std::__1::pair<const TSKUIDStruct, unsigned int>>> _rowIndexForUid;
    unsigned long long _versionCounter;
    TSTColumnRowUIDMapper *_copyOnWriteUIDMapper;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long versionCounter; // @synthesize versionCounter=_versionCounter;
- (_Bool)_checkStructure;
- (struct TSCERangeCoordinate)tableRangeCoordinate;
- (void)assertCollaborationConvergence;
- (void)convertCellUIDLookupList:(id)arg1 toCellRangeVector:(vector_e87daf7b *)arg2 prunedSummaryCellUIDs:(vector_e52772ba *)arg3;
- (_Bool)writeCellIDsInCellUIDList:(id)arg1 toVector:(vector_38b190b0 *)arg2 prunedCellUIDs:(vector_e52772ba *)arg3;
- (void)applyMap:(const struct TSKUIDStructMap *)arg1 toRows:(_Bool)arg2;
- (void)reset;
- (_Bool)isEmpty;
- (void)swapRowAtIndex:(unsigned int)arg1 withRowAtIndex:(unsigned int)arg2;
- (void)insertRowsWithUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1 atIndex:(unsigned int)arg2;
- (void)insertColumnsWithUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1 atIndex:(unsigned short)arg2;
- (void)insertNewColumnsInIndexRange:(struct _NSRange)arg1;
- (void)insertNewRowsInIndexRange:(struct _NSRange)arg1;
- (void)replaceColumnsWithUids:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (void)replaceRowsWithUids:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (void)removeColumnsAtIndexes:(id)arg1;
- (void)removeRowsAtIndexes:(id)arg1;
- (void)moveColumnIndexRange:(struct _NSRange)arg1 toIndex:(unsigned short)arg2;
- (void)moveRowIndexRange:(struct _NSRange)arg1 toIndex:(unsigned int)arg2;
- (id)cellTractRefForUIDRectRef:(id)arg1;
- (id)cellRegionForUIDRange:(const struct TSKUIDStructTract *)arg1;
- (struct TSKUIDStructTract)cellUIDRangeForCellRange:(struct TSUCellRect)arg1;
- (struct TSUCellRect)cellRangeForUIDRange:(const struct TSKUIDStructTract *)arg1;
- (TSKUIDStructVectorTemplate_724280d5)prunedRowUIDsFromRowUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (TSKUIDStructVectorTemplate_724280d5)prunedColumnUIDsFromColumnUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (struct TSUCellCoord)cellIDForCellUID:(struct TSKUIDStructCoord)arg1;
- (struct TSKUIDStructCoord)cellUIDForCellID:(struct TSUCellCoord)arg1;
- (struct _NSRange)rowRangeForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (struct _NSRange)columnRangeForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (id)rowIndexesForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (id)mutableRowIndexesForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (id)columnIndexesForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (id)mutableColumnIndexesForUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg1;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2;
- (id)p_mutableRowIndexesForUIDSet:(id)arg1 notFoundUIDs:(id)arg2;
- (id)p_mutableColumnIndexesForUIDSet:(id)arg1 notFoundUIDs:(id)arg2;
- (id)mutableIndexesForUIDSet:(id)arg1 isRows:(_Bool)arg2 notFoundUIDs:(id)arg3;
- (id)UIDSetForIndexes:(id)arg1 isRows:(_Bool)arg2;
@property(readonly, nonatomic) unsigned int numberOfRows;
@property(readonly, nonatomic) unsigned short numberOfColumns;
- (TSKUIDStructVectorTemplate_724280d5)rowUIDsForRowRange:(struct _NSRange)arg1;
- (TSKUIDStructVectorTemplate_724280d5)columnUIDsForColumnRange:(struct _NSRange)arg1;
- (struct TSUCellRect)range;
- (TSKUIDStructVectorTemplate_724280d5)rowUIDs;
- (TSKUIDStructVectorTemplate_724280d5)columnUIDs;
- (TSKUIDStructVectorTemplate_724280d5)rowUIDsForRowIndexes:(id)arg1;
- (TSKUIDStructVectorTemplate_724280d5)columnUIDsForColumnIndexes:(id)arg1;
- (unsigned int)rowIndexForRowUID:(struct TSKUIDStruct)arg1;
- (unsigned short)columnIndexForColumnUID:(struct TSKUIDStruct)arg1;
- (struct TSKUIDStruct)rowUIDForRowIndex:(unsigned int)arg1;
- (const TSKUIDStructVectorTemplate_724280d5 *)allOrderedRowUIDs;
- (struct TSKUIDStruct)columnUIDForColumnIndex:(unsigned short)arg1;
- (id)copyOnWriteUIDMapper;
- (void)incrementVersionCounter;
- (id)copyWithContext:(id)arg1;
- (id)initWithContext:(id)arg1;
- (id)initWithContext:(id)arg1 columnUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg2 rowUIDs:(const TSKUIDStructVectorTemplate_724280d5 *)arg3;
- (id)initWithContext:(id)arg1 tableUUID:(id)arg2 numberOfRows:(unsigned int)arg3 numberOfColumns:(unsigned int)arg4;
- (void)saveToArchiver:(id)arg1;
- (void)loadFromUnarchiver:(id)arg1;

@end

