//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CloudArtworkImporter, DetermineArtistStoreIDLookupTypeOperation, ICConnectionConfiguration, ML3MusicLibrary, MSVWatchdog, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface CloudArtistHeroImageImporter : NSObject
{
    ML3MusicLibrary *_musicLibrary;
    ICConnectionConfiguration *_configuration;
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSOperationQueue *_operationQueue;
    NSString *_powerAssertionIdentifier;
    MSVWatchdog *_watchdog;
    DetermineArtistStoreIDLookupTypeOperation *_currentUpdateOpertion;
    DetermineArtistStoreIDLookupTypeOperation *_followupUpdateOpertion;
    CloudArtworkImporter *_artworkImporter;
}

+ (id)allArtistImagesMapCacheFilePathURL;
- (void).cxx_destruct;
@property(retain, nonatomic) CloudArtworkImporter *artworkImporter; // @synthesize artworkImporter=_artworkImporter;
@property(retain, nonatomic) DetermineArtistStoreIDLookupTypeOperation *followupUpdateOpertion; // @synthesize followupUpdateOpertion=_followupUpdateOpertion;
@property(retain, nonatomic) DetermineArtistStoreIDLookupTypeOperation *currentUpdateOpertion; // @synthesize currentUpdateOpertion=_currentUpdateOpertion;
@property(retain, nonatomic) MSVWatchdog *watchdog; // @synthesize watchdog=_watchdog;
@property(retain, nonatomic) NSString *powerAssertionIdentifier; // @synthesize powerAssertionIdentifier=_powerAssertionIdentifier;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *accessQueue; // @synthesize accessQueue=_accessQueue;
@property(readonly, nonatomic) ICConnectionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(readonly, nonatomic) ML3MusicLibrary *musicLibrary; // @synthesize musicLibrary=_musicLibrary;
- (void)_importHeroImageForArtistType:(long long)arg1 withPersistentID:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_artistHeroImageUpdateFinished;
- (long long)_synchronouslyLoadArtistUpdatePollingFrequencyFromBag;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)deprioritizeAlbumArtistHeroImageForPersistentID:(long long)arg1;
- (void)deprioritizeArtistHeroImageForPersistentID:(long long)arg1;
- (void)importAlbumArtistHeroImageForPersistentID:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)importArtistHeroImageForPersistentID:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelArtistHeroImageUpdateAndWaitForOperationToFinish:(_Bool)arg1;
- (void)cancelArtistHeroImageUpdate;
- (void)updateArtistHeroImagesForArtistsAddedSinceLastUpdate;
- (void)updateArtistHeroImages;
- (id)userIdentity;
- (id)initWithConfiguration:(id)arg1;

@end

