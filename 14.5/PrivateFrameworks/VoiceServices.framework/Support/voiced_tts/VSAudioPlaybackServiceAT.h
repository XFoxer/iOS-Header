//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <voiced_tts/AFAudioPowerProviding-Protocol.h>
#import <voiced_tts/VSAudioPlaybackServiceProtocol-Protocol.h>

@class NSCondition, NSDate, NSError, NSMutableArray, NSString, VSMappedData;

@interface VSAudioPlaybackServiceAT : NSObject <VSAudioPlaybackServiceProtocol, AFAudioPowerProviding>
{
    _Bool _discontinuedDuringPlayback;
    unsigned int _sessionID;
    struct OpaqueAudioQueue *_audioQueue;
    NSString *_outputRoute;
    NSError *_error;
    long long _state;
    double _enqueuedSampleCount;
    NSDate *_audioQueueStartDate;
    NSDate *_audioQueueFutureEndDate;
    VSMappedData *_mappedData;
    NSMutableArray *_enqueuedMappedAudioInfo;
    unsigned long long _playingBufferCount;
    NSCondition *_dequeueCondition;
    struct AudioStreamBasicDescription _asbd;
    struct _opaque_pthread_cond_t _stateChangeCondition;
    struct _opaque_pthread_mutex_t _waitForStateChangeMutex;
    struct AudioTimeStamp _audioStartTimeStamp;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSCondition *dequeueCondition; // @synthesize dequeueCondition=_dequeueCondition;
@property(nonatomic) unsigned long long playingBufferCount; // @synthesize playingBufferCount=_playingBufferCount;
@property(retain, nonatomic) NSMutableArray *enqueuedMappedAudioInfo; // @synthesize enqueuedMappedAudioInfo=_enqueuedMappedAudioInfo;
@property(retain, nonatomic) VSMappedData *mappedData; // @synthesize mappedData=_mappedData;
@property(retain, nonatomic) NSDate *audioQueueFutureEndDate; // @synthesize audioQueueFutureEndDate=_audioQueueFutureEndDate;
@property(retain, nonatomic) NSDate *audioQueueStartDate; // @synthesize audioQueueStartDate=_audioQueueStartDate;
@property(nonatomic) struct AudioTimeStamp audioStartTimeStamp; // @synthesize audioStartTimeStamp=_audioStartTimeStamp;
@property(nonatomic) double enqueuedSampleCount; // @synthesize enqueuedSampleCount=_enqueuedSampleCount;
@property(nonatomic) struct _opaque_pthread_cond_t stateChangeCondition; // @synthesize stateChangeCondition=_stateChangeCondition;
@property(nonatomic) struct _opaque_pthread_mutex_t waitForStateChangeMutex; // @synthesize waitForStateChangeMutex=_waitForStateChangeMutex;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) _Bool discontinuedDuringPlayback; // @synthesize discontinuedDuringPlayback=_discontinuedDuringPlayback;
@property(retain, nonatomic) NSString *outputRoute; // @synthesize outputRoute=_outputRoute;
@property(nonatomic) unsigned int sessionID; // @synthesize sessionID=_sessionID;
@property(nonatomic) struct OpaqueAudioQueue *audioQueue; // @synthesize audioQueue=_audioQueue;
@property(nonatomic) struct AudioStreamBasicDescription asbd; // @synthesize asbd=_asbd;
- (_Bool)getAveragePower:(float *)arg1 andPeakPower:(float *)arg2;
- (void)didEndAccessPower;
- (void)willBeginAccessPower;
- (id)audioPowerProvider;
- (_Bool)isAudioQueueRunning;
- (_Bool)isAudioQueueStalled;
- (void)waitForAudioQueueStop;
- (void)reset;
- (void)pause;
- (void)stop;
- (void)flushAndStop;
- (id)_enqueueAudioBytesLength:(unsigned int)arg1 audioBytes:(const void *)arg2 packetCount:(long long)arg3 packetDescriptions:(const void *)arg4;
- (void)dequeueAvailableMappedAudio;
- (void)enqueue:(id)arg1 packetCount:(long long)arg2 packetDescriptions:(id)arg3;
- (id)start;
- (void)signalQueueRunningStateChange;
- (void)handleMediaServerReset;
- (void)dealloc;
- (id)initWithAudioSessionID:(unsigned int)arg1 asbd:(struct AudioStreamBasicDescription)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

