//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class ACAccount, AppUsageInstallHistoryMap, KeepAlive, NSArray, NSDate, NSDictionary, NSString;

@interface MetricsContext : NSObject
{
    _Bool _isTemporary;
    _Bool _shouldResetPayoutDate;
    _Bool _userInitiated;
    _Bool _addPriorApps;
    _Bool _rescheduleActorIDReset;
    NSString *_actorID;
    NSDictionary *_anonymousKatanaIDs;
    long long _appUsageType;
    NSString *_currentOSVersion;
    NSArray *_deletedApps;
    AppUsageInstallHistoryMap *_historyMap;
    KeepAlive *_keepAlive;
    NSDate *_intervalStartDate;
    NSString *_logKey;
    NSDate *_launchesStartDate;
    long long _minimumRunningTime;
    long long _now;
    NSDate *_nowDate;
    long long _offset;
    NSDictionary *_payoutKatanaIDs;
    long long _startTime;
    ACAccount *_subscribedAccount;
    NSDictionary *_subscriptionInfo;
    NSString *_subscriptionState;
    NSString *_topic;
}

+ (id)shortNameForAppUsageType:(long long)arg1;
+ (id)contextForType:(long long)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool rescheduleActorIDReset; // @synthesize rescheduleActorIDReset=_rescheduleActorIDReset;
@property(nonatomic) _Bool addPriorApps; // @synthesize addPriorApps=_addPriorApps;
@property(nonatomic) _Bool userInitiated; // @synthesize userInitiated=_userInitiated;
@property(copy, nonatomic) NSString *topic; // @synthesize topic=_topic;
@property(retain, nonatomic) NSString *subscriptionState; // @synthesize subscriptionState=_subscriptionState;
@property(copy, nonatomic) NSDictionary *subscriptionInfo; // @synthesize subscriptionInfo=_subscriptionInfo;
@property(copy, nonatomic) ACAccount *subscribedAccount; // @synthesize subscribedAccount=_subscribedAccount;
@property(nonatomic) long long startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool shouldResetPayoutDate; // @synthesize shouldResetPayoutDate=_shouldResetPayoutDate;
@property(copy, nonatomic) NSDictionary *payoutKatanaIDs; // @synthesize payoutKatanaIDs=_payoutKatanaIDs;
@property(nonatomic) long long offset; // @synthesize offset=_offset;
@property(readonly, nonatomic) NSDate *nowDate; // @synthesize nowDate=_nowDate;
@property(readonly, nonatomic) long long now; // @synthesize now=_now;
@property(nonatomic) long long minimumRunningTime; // @synthesize minimumRunningTime=_minimumRunningTime;
@property(copy, nonatomic) NSDate *launchesStartDate; // @synthesize launchesStartDate=_launchesStartDate;
@property(readonly, nonatomic) NSString *logKey; // @synthesize logKey=_logKey;
@property(readonly, nonatomic) NSDate *intervalStartDate; // @synthesize intervalStartDate=_intervalStartDate;
@property(retain, nonatomic) KeepAlive *keepAlive; // @synthesize keepAlive=_keepAlive;
@property(nonatomic) _Bool isTemporary; // @synthesize isTemporary=_isTemporary;
@property(nonatomic) AppUsageInstallHistoryMap *historyMap; // @synthesize historyMap=_historyMap;
@property(copy, nonatomic) NSArray *deletedApps; // @synthesize deletedApps=_deletedApps;
@property(copy, nonatomic) NSString *currentOSVersion; // @synthesize currentOSVersion=_currentOSVersion;
@property(readonly, nonatomic) long long appUsageType; // @synthesize appUsageType=_appUsageType;
@property(copy, nonatomic) NSDictionary *anonymousKatanaIDs; // @synthesize anonymousKatanaIDs=_anonymousKatanaIDs;
@property(copy, nonatomic) NSString *actorID; // @synthesize actorID=_actorID;
- (id)_startDateForAppUsageType:(long long)arg1;
- (void)_recordLaunchesIntervalStartDateForAppUsageType:(long long)arg1;
- (void)_recordIntervalStartDateForAppUsageType:(long long)arg1;
- (void)_setLogKey:(id)arg1;
- (id)_metricsTopic;
- (id)_launchesStartDateForAppUsageType:(long long)arg1;
- (void)recordLaunchesIntervalStartDate;
- (void)recordIntervalStartDate;
@property(readonly, nonatomic) Class metadataEntityClass;
@property(readonly, nonatomic) Class appEventEntityClass;
- (id)initWithAppUsageType:(long long)arg1;

@end

