//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "PXProgrammaticNavigationParticipant-Protocol.h"
#import "PXSettingsKeyObserver-Protocol.h"
#import "UITabBarControllerDelegate-Protocol.h"
#import "UIWindowSceneDelegate-Protocol.h"

@class CKShareMetadata, NSDate, NSString, NSURL, NSUserActivity, PUTabbedLibraryViewController, PXProgrammaticNavigationDestination, PXProgrammaticNavigationRequest, PXSplitViewController, PhotosAppSpec, PhotosURLNavigationRequest, UIWindow;

@interface PhotosWindowSceneDelegate : NSObject <UITabBarControllerDelegate, PXSettingsKeyObserver, PXProgrammaticNavigationParticipant, UIWindowSceneDelegate>
{
    PhotosAppSpec *_spec;
    PUTabbedLibraryViewController *_tabbedLibraryViewController;
    UIWindow *_mainWindow;
    PXSplitViewController *_splitViewController;
    NSDate *_lastDidEnterBackgroundDate;
    NSUserActivity *_pendingSiriSearchActivityToOpen;
    CKShareMetadata *_pendingCloudKitShareMetadataToAccept;
    PXProgrammaticNavigationRequest *_pendingProgrammaticNavigationRequestToOpen;
    NSURL *_pendingURLToOpen;
    PhotosURLNavigationRequest *_inProgressURLNavigationRequest;
}

- (void).cxx_destruct;
@property(retain, nonatomic) PhotosURLNavigationRequest *inProgressURLNavigationRequest; // @synthesize inProgressURLNavigationRequest=_inProgressURLNavigationRequest;
@property(retain, nonatomic) NSURL *pendingURLToOpen; // @synthesize pendingURLToOpen=_pendingURLToOpen;
@property(retain, nonatomic) PXProgrammaticNavigationRequest *pendingProgrammaticNavigationRequestToOpen; // @synthesize pendingProgrammaticNavigationRequestToOpen=_pendingProgrammaticNavigationRequestToOpen;
@property(retain, nonatomic) CKShareMetadata *pendingCloudKitShareMetadataToAccept; // @synthesize pendingCloudKitShareMetadataToAccept=_pendingCloudKitShareMetadataToAccept;
@property(retain, nonatomic) NSUserActivity *pendingSiriSearchActivityToOpen; // @synthesize pendingSiriSearchActivityToOpen=_pendingSiriSearchActivityToOpen;
@property(retain, nonatomic) NSDate *lastDidEnterBackgroundDate; // @synthesize lastDidEnterBackgroundDate=_lastDidEnterBackgroundDate;
@property(retain, nonatomic) PXSplitViewController *splitViewController; // @synthesize splitViewController=_splitViewController;
@property(retain, nonatomic) UIWindow *mainWindow; // @synthesize mainWindow=_mainWindow;
@property(retain, nonatomic) PUTabbedLibraryViewController *tabbedLibraryViewController; // @synthesize tabbedLibraryViewController=_tabbedLibraryViewController;
@property(retain, nonatomic) PhotosAppSpec *spec; // @synthesize spec=_spec;
@property(readonly, nonatomic) PXProgrammaticNavigationDestination *px_navigationDestination;
- (id)nextExistingParticipantOnRouteToDestination:(id)arg1;
- (void)navigateToDestination:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)routingOptionsForDestination:(id)arg1;
- (void)settings:(id)arg1 changedValueForKey:(id)arg2;
- (void)tabBarController:(id)arg1 didSelectViewController:(id)arg2;
- (_Bool)tabBarController:(id)arg1 shouldSelectViewController:(id)arg2;
- (void)showNetworkPromptIfNecessary;
- (void)setupAppUI;
- (id)shortcutURLForShortcutItem:(id)arg1;
- (id)userActivityURLForUserActivity:(id)arg1;
- (void)acceptCloudKitShareInvitation:(id)arg1;
- (void)openRoutingURL:(id)arg1;
- (void)openSiriSearchActivity:(id)arg1;
- (void)openUserActivity:(id)arg1;
- (void)windowScene:(id)arg1 userDidAcceptCloudKitShareWithMetadata:(id)arg2;
- (void)scene:(id)arg1 continueUserActivity:(id)arg2;
- (void)windowScene:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scene:(id)arg1 openURLContexts:(id)arg2;
- (void)sceneDidEnterBackground:(id)arg1;
- (void)sceneWillEnterForeground:(id)arg1;
- (void)sceneDidDisconnect:(id)arg1;
- (void)scene:(id)arg1 willConnectToSession:(id)arg2 options:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

