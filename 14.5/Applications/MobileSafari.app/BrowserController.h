//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIResponder.h>

#import "ActionPanelDelegate-Protocol.h"
#import "AddBookmarkActivityDelegate-Protocol.h"
#import "AutomationOverlayViewControllerDelegate-Protocol.h"
#import "BackForwardTableViewControllerDelegate-Protocol.h"
#import "BookmarksBarViewDelegate-Protocol.h"
#import "BookmarksNavigationControllerDelegate-Protocol.h"
#import "BrowserRootViewControllerDelegate-Protocol.h"
#import "CatalogViewControllerDelegate-Protocol.h"
#import "CompletionDetailViewControllerDelegate-Protocol.h"
#import "ContinuousReadingViewControllerDelegate-Protocol.h"
#import "DownloadOpenHandler-Protocol.h"
#import "LinkPreviewProvider-Protocol.h"
#import "MobileSafariWindowDelegate-Protocol.h"
#import "QLPreviewControllerDelegate-Protocol.h"
#import "SKStoreProductViewControllerDelegate-Protocol.h"
#import "TabDocumentDelegate-Protocol.h"
#import "TabDocumentViewGeometryProviding-Protocol.h"
#import "TabSnapshotGeneratorDelegate-Protocol.h"
#import "UIGestureRecognizerDelegatePrivate-Protocol.h"
#import "UIScreenshotServiceDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UIWindowSceneDelegate-Protocol.h"
#import "WBSDigitalHealthManagerDelegate-Protocol.h"
#import "_SFBarManagerDelegate-Protocol.h"
#import "_SFBrowserContentController-Protocol.h"
#import "_SFBrowserKeyCommandSafariMethods-Protocol.h"
#import "_SFDigitalHealthViewControllerDelegate-Protocol.h"
#import "_SFDynamicBarAnimatorDelegate-Protocol.h"
#import "_SFMailContentProviderDataSource-Protocol.h"
#import "_SFNavigationBarDelegate-Protocol.h"
#import "_SFNavigationIntentHandling-Protocol.h"
#import "_SFSaveToFilesOperationDelegate-Protocol.h"
#import "_SFSingleBookmarkNavigationControllerDelegate-Protocol.h"

@class ActionPanel, ApplicationShortcutController, AutomationOverlayWindow, BrowserRootViewController, BrowserWindowController, CatalogViewControllerState, ContinuousReadingController, ContinuousReadingViewController, DownloadsViewController, MobileSafariWindow, NSDate, NSMapTable, NSMutableSet, NSString, NSTimer, NSUUID, PrivateBrowsingObfuscationWindow, SKStoreProductViewController, SearchStateCache, StatusBarSpinnerController, TabController, TabDocument, TabDragDropInteractionController, UIPinchGestureRecognizer, UIScrollView, UITextRange, UIToolbar, UIView, UIViewController, UIWindow, UIWindowScene, UserActivityController, WBSDigitalHealthManager, WKBackForwardListItem, WKPreferences, _SFActivityViewController, _SFBarManager, _SFBrowserConfiguration, _SFBrowserSavedState, _SFCrashBanner, _SFDownload, _SFMailContentProvider, _SFPageFormatMenuController, _SFPageZoomPreferenceManager, _SFPerSitePreferencesVendor, _SFSaveToFilesOperation, _SFWebView;
@protocol _SFBrowserDocument;

@interface BrowserController : UIResponder <_SFDigitalHealthViewControllerDelegate, ActionPanelDelegate, AddBookmarkActivityDelegate, AutomationOverlayViewControllerDelegate, BackForwardTableViewControllerDelegate, BookmarksBarViewDelegate, BookmarksNavigationControllerDelegate, BrowserRootViewControllerDelegate, CatalogViewControllerDelegate, DownloadOpenHandler, QLPreviewControllerDelegate, SKStoreProductViewControllerDelegate, TabDocumentViewGeometryProviding, TabSnapshotGeneratorDelegate, UIGestureRecognizerDelegatePrivate, UIScreenshotServiceDelegate, WBSDigitalHealthManagerDelegate, _SFBarManagerDelegate, _SFDynamicBarAnimatorDelegate, _SFMailContentProviderDataSource, _SFSaveToFilesOperationDelegate, CompletionDetailViewControllerDelegate, ContinuousReadingViewControllerDelegate, LinkPreviewProvider, MobileSafariWindowDelegate, TabDocumentDelegate, UIScrollViewDelegate, UIWindowSceneDelegate, _SFBrowserContentController, _SFBrowserKeyCommandSafariMethods, _SFNavigationBarDelegate, _SFNavigationIntentHandling, _SFSingleBookmarkNavigationControllerDelegate>
{
    _Bool _antiPhishingServiceInitialized;
    _Bool _applicationIsOpaque;
    unsigned long long _avoidSuppressingBlur;
    _Bool _backgrounded;
    WKBackForwardListItem *_backForwardListItemNeedingSnapshot;
    CDUnknownBlockType _blockRequestingScreenshotPDFData;
    _SFBrowserConfiguration *_cachedConfiguration;
    _SFMailContentProvider *_cachedMailContentProvider;
    _Bool _contentBorrowedForTab;
    struct UIEdgeInsets _contentInsetForContentFrame;
    ContinuousReadingController *_continuousReadingController;
    ContinuousReadingViewController *_continuousReadingViewController;
    _SFCrashBanner *_crashBanner;
    double _crashBannerDraggingOffset;
    _Bool _didRestoreState;
    DownloadsViewController *_downloadsViewController;
    NSMutableSet *_dropSessionsForTabBarVisibility;
    _Bool _freezeWebViewUpdatesForSizeTransition;
    _Bool _hasTappedShare;
    struct UIEdgeInsets _horizontalScrollIndicatorBaseInsets;
    _Bool _interactivelyChangingObscuredInsets;
    _Bool _isActionPanelReady;
    _Bool _isAnimatingBannerOffScreen;
    _Bool _isTrackingWebViewAnimatedResize;
    double _lastAdjustmentForKeyboard;
    long long _lastTabSwitchKeyboardModifierFlags;
    UIViewController *_modalBookmarksController;
    _Bool _needsImmediateLayoutForWebViewObscuredInsetsUpdate;
    _Bool _needsSnapshotUpdateForActiveTab;
    _Bool _needsSnapshotUpdateForBlankTabs;
    TabDocument *_nextContinuousItemDocument;
    PrivateBrowsingObfuscationWindow *_obfuscationWindow;
    _SFActivityViewController *_presentedActivityViewController;
    TabDocument *_previewDocument;
    NSTimer *_previewDocumentCloseTimer;
    _SFDownload *_previewedDownload;
    TabDocument *_previousContinuousItemDocument;
    ActionPanel *_prewarmedActionPanel;
    TabDocument *_progressSuppressingDocument;
    NSMutableSet *_reasonsForIgnoringUserInteraction;
    NSDate *_resignActiveDate;
    BrowserRootViewController *_rootViewController;
    _SFSaveToFilesOperation *_saveToFilesOperation;
    UIScrollView *_scrollView;
    SearchStateCache *_searchStateCache;
    NSString *_sceneID;
    _Bool _scrollViewIsDragging;
    _Bool _shouldDisableToolbarForCatalogViewControllerPopover;
    _Bool _shouldMakeFavoritesStickyWhenReinsertingBorrowedContent;
    _Bool _showingDemoModeAlert;
    TabController *_tabController;
    TabDragDropInteractionController *_tabDragDropController;
    _Bool _tabViewPinchActive;
    UIPinchGestureRecognizer *_tabViewPinchRecognizer;
    _Bool _telemetryHasPresentedBookmarks;
    UIToolbar *_tiltedTabToolbar;
    _Bool _trackingWebViewBackForwardNavigationGesture;
    struct UIEdgeInsets _verticalScrollIndicatorBaseInsets;
    NSMapTable *_viewControllersPendingPresentation;
    MobileSafariWindow *_window;
    AutomationOverlayWindow *_windowForAutomationOverlay;
    _Bool _disableBarHiding;
    long long _dynamicBarAnimatorStateBeforeNavigationGesture;
    _Bool _shouldShowBarsAfterDraggingDownward;
    StatusBarSpinnerController *_spinnerController;
    _Bool _isSpeculativeLoadingEnabled;
    TabDocument *_speculativeLoadDocument;
    NSString *_speculativeLoadURL;
    CatalogViewControllerState *_catalogViewControllerStateForSizeChange;
    _Bool _isPerformingRootViewControllerSizeTransition;
    _Bool _statusBarHeightChangedWhilePerformingRootViewControllerSizeTransition;
    long long _rootViewControllerVerticalSizeClassBeforeSizeTransition;
    long long _bookmarksPresentationStyleBeforeSizeTransition;
    _Bool _isRestoringInterfaceAfterElementFullscreen;
    UIView *_scrollingStatusBar;
    _SFPageFormatMenuController *_pageFormatMenuController;
    _Bool _readerViewStale;
    _Bool _readerShouldBeShownIfPossible;
    _Bool _fullScreenInPortrait;
    _Bool _usesNarrowLayout;
    _Bool _usesTabBar;
    _Bool _showingCrashBanner;
    _Bool _suspendedOrSuspending;
    _Bool _controlledByAutomation;
    _Bool _wantsUnifiedFieldFocused;
    _Bool _canFocusNavigationBarURL;
    _Bool _privateBrowsingEnabled;
    BrowserWindowController *_browserWindowController;
    NSUUID *_UUID;
    TabDocument *_cachedDocumentOnContinuousTransition;
    double _lastInteractionTime;
    _SFBrowserSavedState *_savedState;
    long long _favoritesState;
    _SFBarManager *_barManager;
    WKPreferences *_wkPreferences;
    SKStoreProductViewController *_presentedStoreProductViewController;
    UITextRange *_textRangeToRestoreAfterParsecCardDismissal;
    NSString *_searchCountKey;
    WBSDigitalHealthManager *_digitalHealthManager;
    TabDocument *_tabDocumentPlayingPIPVideo;
    UserActivityController *_userActivityController;
    ApplicationShortcutController *_shortcutController;
    UIWindowScene *_scene;
    _SFWebView *_webView;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) TabController *tabController; // @synthesize tabController=_tabController;
@property(readonly, nonatomic) BrowserRootViewController *rootViewController; // @synthesize rootViewController=_rootViewController;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled; // @synthesize privateBrowsingEnabled=_privateBrowsingEnabled;
- (_Bool)saveToFilesOperationSupportsDownloads:(id)arg1;
- (void)saveToFilesOperation:(id)arg1 presentViewController:(id)arg2;
- (void)saveToFilesOperation:(id)arg1 didFinishWithSuccess:(_Bool)arg2;
- (_Bool)activityViewControllerSupportsDownloads:(id)arg1;
- (void)automationOverlayControllerDidCancelAutomation:(id)arg1;
- (void)automationOverlayControllerDidDisableAutomation:(id)arg1;
- (void)automationOverlayController:(id)arg1 didChangeAllowsUserInteraction:(_Bool)arg2;
- (_Bool)automationOverlayControllerShouldAllowUserInteraction:(id)arg1;
- (long long)previewController:(id)arg1 editingModeForPreviewItem:(id)arg2;
- (id)previewController:(id)arg1 transitionViewForPreviewItem:(id)arg2;
- (_Bool)previewController:(id)arg1 shouldOpenURL:(id)arg2 forPreviewItem:(id)arg3;
- (void)previewControllerDidDismiss:(id)arg1;
- (void)openDownload:(id)arg1;
- (void)screenshotService:(id)arg1 generatePDFRepresentationWithCompletion:(CDUnknownBlockType)arg2;
- (void)windowScene:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)scene:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;
- (void)scene:(id)arg1 continueUserActivity:(id)arg2;
- (void)scene:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (void)scene:(id)arg1 openURLContexts:(id)arg2;
- (void)windowScene:(id)arg1 didUpdateCoordinateSpace:(id)arg2 interfaceOrientation:(long long)arg3 traitCollection:(id)arg4;
- (void)sceneDidEnterBackground:(id)arg1;
- (void)sceneWillResignActive:(id)arg1;
- (void)sceneDidBecomeActive:(id)arg1;
- (void)sceneWillEnterForeground:(id)arg1;
- (void)sceneDidDisconnect:(id)arg1;
- (void)scene:(id)arg1 willConnectToSession:(id)arg2 options:(id)arg3;
- (void)digitalHealthViewController:(id)arg1 didFinishDismissingBlockingViewController:(id)arg2;
- (void)tabDocument:(id)arg1 didChangePIPState:(_Bool)arg2;
- (void)policyDidChangeForDigitalHealthManager:(id)arg1;
- (void)_automaticPasswordInputViewNotification:(id)arg1;
- (double)continuousReadingViewControllerNextWebViewLandingOffset:(id)arg1 includeBottomBar:(_Bool)arg2;
- (void)continuousReadingViewController:(id)arg1 didCommitToLoadItem:(id)arg2;
- (void)continuousReadingViewControllerCommitToLoadPreviousItem:(id)arg1;
- (void)continuousReadingViewControllerWillCommitToLoadNextItem:(id)arg1;
- (void)continuousReadingViewController:(id)arg1 scrollViewDidScroll:(id)arg2;
- (id)pageZoomPreferenceManagerForTabDocument:(id)arg1;
- (void)tabDocumentDidChangeSafeAreaShouldAffectObscuredInsets:(id)arg1;
- (void)tabDocumentDidChangeSafeAreaInsets:(id)arg1;
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;
- (_Bool)tabDocumentCanCloseWindow:(id)arg1;
- (id)tabDocumentSavedSessionStateData:(id)arg1;
- (long long)tabDocumentOrderIndex:(id)arg1;
- (void)tabDocument:(id)arg1 dismissViewControllerAnimated:(id)arg2;
- (void)tabDocument:(id)arg1 presentViewControllerAnimated:(id)arg2;
- (void)tabDocumentWillDismissInlineDialog:(id)arg1;
- (void)tabDocumentWillShowInlineDialog:(id)arg1;
- (void)tabDocumentDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)tabDocumentDidBeginNavigationGesture:(id)arg1;
- (void)setAppBannerPinnedToTop:(_Bool)arg1 forTabDocument:(id)arg2;
- (void)removeAppBannerFromTabDocument:(id)arg1 animated:(_Bool)arg2;
- (void)tabDocumentDidCompleteCheckForAppBanner:(id)arg1;
- (id)blankTabTitleForTabDocument:(id)arg1;
- (_Bool)tabDocumentCanBecomeCurrentUserActivity:(id)arg1;
- (_Bool)tabDocumentCanBeginInputSessionForStreamlinedLogin:(id)arg1;
- (_Bool)tabDocumentCanDisplayModalUI:(id)arg1;
- (void)tabDocumentWillDisableLinkPreview;
- (void)tabDocumentDidDimissPreviewedDocument:(id)arg1;
- (void)tabDocumentCommitPreviewedDocumentAsNewTab:(id)arg1 inBackground:(_Bool)arg2;
- (void)tabDocumentCommitPreviewedDocument:(id)arg1;
- (void)tabDocument:(id)arg1 didCreatePreviewDocument:(id)arg2;
- (void)_closePreviewDocumentTimerFired:(id)arg1;
- (unsigned long long)popUpPolicyForTabDocument:(id)arg1;
- (void)tabDocumentShouldCloseAndSwitchToParentTab:(id)arg1;
- (void)tabDocument:(id)arg1 didCreateNewTabDocument:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 provideContextResponseWithBlock:(CDUnknownBlockType)arg2;
- (void)tabDocument:(id)arg1 didExtractArticleText:(id)arg2 withMetadata:(id)arg3;
- (void)tabDocument:(id)arg1 didDetectReaderAvailability:(_Bool)arg2;
- (void)tabDocumentDidAddAlert:(id)arg1;
- (_Bool)tabDocumentCanShowJavaScriptAlertConfirmOrTextInput:(id)arg1;
- (_Bool)tabDocumentShouldHandleCertificateError:(id)arg1;
- (_Bool)tabDocumentShouldHandleAuthentication:(id)arg1;
- (_Bool)tabDocumentIsBackgroundPreloading:(id)arg1;
- (void)tabDocumentFluidProgressRocketAnimationDidComplete:(id)arg1;
- (void)tabDocumentDidUpdateBackForward:(id)arg1;
- (void)tabDocumentDidUpdateURL:(id)arg1;
- (void)tabDocumentDidUpdateTitle:(id)arg1;
- (void)tabDocumentDidChangeLocationWithinPageForMainFrame:(id)arg1;
- (void)didFirstVisuallyNonEmptyLayoutForWebViewInTabDocument:(id)arg1;
- (void)tabDocumentDidCommitNavigation:(id)arg1;
- (void)tabDocument:(id)arg1 didFinishLoadingWithError:(_Bool)arg2;
- (void)tabDocumentDidCancelRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocumentCanRedirectToExternalApplication:(id)arg1;
- (_Bool)tabDocument:(id)arg1 canShowDownload:(id)arg2;
- (_Bool)tabDocumentCanDownloadFile:(id)arg1;
- (void)tabDocumentWillStartLoadFromUserClick:(id)arg1;
- (void)tabDocumentDidStartLoading:(id)arg1;
- (void)tabDocumentDidUpdatePersistentState:(id)arg1;
- (void)tabDocumentDidUpdateShowingContinuous:(id)arg1;
- (id)printControllerForContentProvider:(id)arg1;
- (id)webViewForMailContentProvider:(id)arg1;
- (_Bool)readerViewIsVisibleForMailContentProvider:(id)arg1;
- (id)readerControllerForMailContentProvider:(id)arg1;
- (void)backForwardTableViewController:(id)arg1 configureNavigationIntentForDrag:(id)arg2;
- (void)backForwardListTableViewControllerDidSelectParentItem:(id)arg1;
- (void)backForwardTableViewController:(id)arg1 didSelectItem:(id)arg2;
- (void)addBookmarkActivityFailedToAcquireBookmarkLock:(id)arg1;
- (_Bool)addBookmarkActivityCanSaveBookmarkChanges:(id)arg1;
- (void)actionPanel:(id)arg1 prepareForMailActivityWithMailController:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)actionPanelAddTabDocumentToReadingList:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (unsigned long long)browserPersonaForActivityViewController:(id)arg1;
- (void)bookmarksNavigationControllerContentDidBecomeDirty:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 setBookmark:(id)arg2 asRead:(_Bool)arg3;
- (void)bookmarksNavigationControllerViewDidDisappear:(id)arg1;
- (void)bookmarksNavigationControllerViewDidAppear:(id)arg1;
- (void)bookmarksNavigationController:(id)arg1 editFavoritesGridViewBookmark:(id)arg2;
- (void)bookmarksNavigationController:(id)arg1 updateReadingListUnreadFilterShowingAllBookmarks:(_Bool)arg2;
- (id)bookmarksNavigationControllerCurrentContinuousReadingItem:(id)arg1;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidDisappear:(id)arg2;
- (void)bookmarksBarView:(id)arg1 bookmarksNavigationControllerViewDidAppear:(id)arg2;
- (_Bool)bookmarksNavigationControllerIsPresentedInsideBlankTab:(id)arg1;
- (long long)bookmarksNavigationControllerFavoritesGridViewLayoutType:(id)arg1;
- (void)bookmarksNavigationControllerReloadDidFail:(id)arg1;
- (void)bookmarksNavigationControllerDidTapOutsideFavorites:(id)arg1;
- (void)bookmarksNavigationControllerDidPressDoneButton:(id)arg1;
- (void)handleNavigationIntent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dispatchNavigationIntent:(id)arg1;
- (void)editBookmarksKeyPressed;
- (void)toggleBookmarksPresentation;
- (id)barManager:(id)arg1 visibleBarItemsForLayout:(long long)arg2 availableItems:(id)arg3;
- (void)barManager:(id)arg1 willRegisterBarWithToken:(id)arg2;
- (void)barManager:(id)arg1 didReceiveLongPressForBarItem:(long long)arg2;
- (_Bool)barManager:(id)arg1 canHandleLongPressForBarItem:(long long)arg2;
- (void)barManager:(id)arg1 didReceiveTapForBarItem:(long long)arg2;
- (void)completionDetailViewControllerDidDismiss:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (_Bool)addBookmarkNavControllerCanSaveBookmarkChanges:(id)arg1;
- (void)addBookmarkNavController:(id)arg1 didFinishWithResult:(_Bool)arg2 bookmark:(id)arg3;
- (void)browserViewController:(id)arg1 didChangeShowingSidebar:(_Bool)arg2;
- (long long)browserViewController:(id)arg1 sidebarStyleForViewSize:(struct CGSize)arg2;
- (id)sidebarContentViewControllerForBrowserViewController:(id)arg1;
- (void)browserViewControllerDidLayOutSubviews:(id)arg1;
- (void)browserViewControllerDidChangeToolbarPlacement:(id)arg1;
- (void)browserViewController:(id)arg1 didCreateToolbar:(id)arg2;
- (long long)browserViewController:(id)arg1 toolbarPlacementForViewSize:(struct CGSize)arg2;
- (_Bool)browserViewControllerShouldTemporarilyHideBottomToolbar:(id)arg1;
- (_Bool)browserViewControllerInterfaceFillsScreen:(id)arg1;
- (void)browserViewController:(id)arg1 traitCollectionDidChange:(id)arg2;
- (void)browserViewControllerDidChangeBarInsets:(id)arg1;
- (void)linkPreviewProviderWillDismissPreview;
- (void)commitLinkPreviewViewController:(id)arg1;
- (id)linkPreviewViewControllerForURL:(id)arg1;
- (void)dynamicBarAnimatorStateDidChange:(id)arg1;
- (void)dynamicBarAnimatorWillLeaveSteadyState:(id)arg1;
- (void)dynamicBarAnimatorWillEnterSteadyState:(id)arg1;
- (_Bool)shouldApplyMinimumEffectiveDeviceWidthForTabDocumentView:(id)arg1;
- (_Bool)shouldAdjustContentOffsetForTabDocumentView:(id)arg1;
- (struct UIEdgeInsets)scrollViewContentInsetAdjustmentsForTabDocumentView:(id)arg1;
- (struct CGSize)maximumUnobscuredWebViewLayoutSizeForTabDocumentView:(id)arg1;
- (struct CGSize)minimumWebViewLayoutSizeForTabDocumentView:(id)arg1;
- (struct UIEdgeInsets)obscuredScrollViewInsetsForTabDocumentView:(id)arg1 unobscuredSafeAreaInsets:(struct UIEdgeInsets *)arg2;
- (_Bool)inElementFullscreenForTabDocumentView:(id)arg1;
- (_Bool)shouldModifyWebViewGeometryForTabDocumentView:(id)arg1;
- (_Bool)shouldFreezeWebViewUpdatesForTabDocumentView:(id)arg1;
- (void)updateInsetsForBackgroundWebView:(id)arg1;
- (id)init;
- (void)_contentBlockersPerSitePreferenceDidChange:(id)arg1;
- (void)_perSitePreferencesDidChange:(id)arg1;
- (void)navigationBarDidLayoutSubviews:(id)arg1;
- (void)navigationBar:(id)arg1 didCreateLeadingToolbar:(id)arg2 trailingToolbar:(id)arg3;
- (void)navigationBar:(id)arg1 didProduceNavigationIntent:(id)arg2;
- (id)currentContentUUIDForNavigationBar:(id)arg1;
- (long long)dataOwnerForNavigationBar:(id)arg1;
- (id)itemProviderForNavigationBar:(id)arg1;
- (id)navigationBarURLForSharing:(id)arg1;
- (void)navigationBarFormatMenuButtonBecameUnavailable:(id)arg1;
- (void)navigationBarFormatMenuButtonWasTapped:(id)arg1;
- (void)navigationBarMediaStateMuteButtonWasTapped:(id)arg1;
- (void)navigationBarStopLoadingButtonWasTapped:(id)arg1;
- (void)navigationBarReloadButtonWasTapped:(id)arg1;
- (void)navigationBarCancelButtonWasTapped:(id)arg1;
- (void)navigationBarFormatMenuButtonStartedInteraction:(id)arg1;
- (void)navigationBarTranslateButtonWasTapped:(id)arg1;
- (void)navigationBarReaderButtonWasTapped:(id)arg1;
- (void)navigationBarDidUpdateBackdropEffect:(id)arg1;
- (void)navigationBarURLWasTapped:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)compressedNavigationBarWasTapped:(id)arg1;
- (void)navigationBarMetricsDidChange:(id)arg1;
@property(readonly, nonatomic) _Bool supportsPrivacyReport;
@property(readonly, nonatomic) _SFPageZoomPreferenceManager *pageZoomManager;
@property(readonly, nonatomic) _SFPerSitePreferencesVendor *perSitePreferencesVendor;
@property(nonatomic) _Bool keepBarsMinimized;
- (void)toggleShowingReaderForUserAction;
@property(readonly, nonatomic) id <_SFBrowserDocument> activeDocument;
- (void)_keyboardWillHide:(id)arg1;
- (void)_keyboardWillShow:(id)arg1;
- (void)mergeAllWindows:(id)arg1;
- (void)openNewPrivateWindow:(id)arg1;
- (void)openNewWindow:(id)arg1;
- (void)addAllTabsToBookmarks:(id)arg1;
- (void)closeAllTabs:(id)arg1;
- (void)closeAllTabsMatchingSearch:(id)arg1;
- (void)autoFillFormKeyPressed;
- (void)saveWebpageAlternativeKeyPressed;
- (void)saveWebpageKeyPressed;
- (void)resetPageZoomLevelAndFontSize;
- (void)decreaseSize:(id)arg1;
- (void)increaseSize:(id)arg1;
- (void)emailCurrentPage;
- (void)cancelKeyPressed;
- (void)toggleReaderKeyPressed;
- (void)previousFindResultKeyPressed;
- (void)nextFindResultKeyPressed;
- (void)takeFindStringKeyPressed;
- (void)findKeyPressed;
- (void)navigateForwardKeyPressed;
- (void)navigateBackKeyPressed;
- (void)reloadFromOriginKeyPressed;
- (void)reloadKeyPressed;
- (void)emptySelectorForDownloadModifierLinkTap;
- (void)emptySelectorForAddLinkToReadingListModifierLinkTap;
- (void)emptySelectorForOpenInNewTabOppositePreferenceModifierLinkTap;
- (void)emptySelectorForOpenInNewTabModifierLinkTap;
- (void)toggleDownloadsKeyPressed;
- (void)reopenLastClosedTabPressed;
- (void)previousTabKeyPressed:(id)arg1;
- (void)nextTabKeyPressed:(id)arg1;
- (void)closeOtherTabsKeyPressed;
- (void)closeActiveTab:(id)arg1;
- (void)searchTabsKeyPressed;
- (void)newTabWithAlternativeOrderingKeyPressed;
- (void)openNewPrivateTab:(id)arg1;
- (void)newTabAlternativeKeyPressed;
- (void)openNewTab:(id)arg1;
- (void)printKeyPressed;
- (void)previousReadingListItemKeyPressed;
- (void)nextReadingListItemKeyPressed;
- (void)addToReadingList:(id)arg1;
- (void)toggleTabViewKeyPressed;
- (void)toggleShowingFavoritesBarKeyPressed;
- (void)toggleBookmarksKeyPressed;
- (void)focusAddressFieldAlternativeKeyPressed;
- (void)focusAddressFieldKeyPressed;
- (void)addToBookmarks:(id)arg1;
- (void)showHistoryCollectionAlternativeKeyPressed;
- (void)showHistoryCollectionKeyPressed;
- (void)showReadingListCollectionKeyPressed;
- (void)showBookmarksCollectionKeyPressed;
- (void)switchToTabKeyPressed:(id)arg1;
- (void)validateCommand:(id)arg1;
- (_Bool)canPerformAction:(SEL)arg1 withSender:(id)arg2;
- (id)keyCommands;
- (void)_didChangeToFirstResponder:(id)arg1;
- (id)nextResponder;
- (_Bool)becomeFirstResponder;
- (_Bool)canBecomeFirstResponder;
- (double)topBarsHeightForSnapshotGenerator:(id)arg1;
- (struct CGSize)contentSizeForSnapshotGenerator:(id)arg1;
- (void)_perSitePageZoomPreferenceDidChange:(id)arg1;
- (void)_perSiteAutomaticReaderActivationPreferenceDidChange:(id)arg1;
- (void)setShowingReader:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic, getter=isShowingReader) _Bool showingReader;
- (void)_downloadsDidChange:(id)arg1;
- (void)goBack;
- (void)scrollViewDidEndZooming:(id)arg1 withView:(id)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(id)arg1 withView:(id)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewDidScrollToTop:(id)arg1;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)_handleKeyUIEvent:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)togglePrivateBrowsingEnabled;
- (void)catalogViewController:(id)arg1 didPasteText:(id)arg2;
- (_Bool)catalogViewControllerShouldSuppressPopover:(id)arg1;
- (void)catalogViewController:(id)arg1 focusNextKeyView:(_Bool)arg2;
- (_Bool)catalogViewControllerShouldRequestSuggestions:(id)arg1;
- (void)catalogViewController:(id)arg1 presentViewControllerWithinPopover:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)catalogViewControllerPopoverWillDismiss:(id)arg1 dismissalReason:(long long)arg2;
- (void)catalogViewControllerDidEndEditing:(id)arg1;
- (void)catalogViewControllerDidBeginEditing:(id)arg1;
- (void)catalogViewController:(id)arg1 cacheSearchQueryID:(long long)arg2;
- (void)catalogViewController:(id)arg1 completionItem:(id)arg2 wasAcceptedForString:(id)arg3;
- (void)catalogViewController:(id)arg1 mightSelectCompletionItem:(id)arg2 forString:(id)arg3;
- (void)catalogViewController:(id)arg1 willRepositionPopoverToRect:(inout struct CGRect *)arg2 inView:(inout id *)arg3;
- (double)catalogViewControllerPopoverWidth:(id)arg1;
- (void)catalogViewController:(id)arg1 loadURL:(id)arg2 inExternalApplication:(_Bool)arg3;
- (void)catalogViewController:(id)arg1 didSelectAddress:(id)arg2;
- (void)catalogViewControllerDidSelectFindOnPage:(id)arg1;
- (void)catalogViewController:(id)arg1 didSelectSearch:(id)arg2;
- (void)_didChangePowerState;
- (void)_bookmarksDidReload:(id)arg1;
- (void)_tabViewPinch:(id)arg1;
- (void)_parsecBagDidLoad:(id)arg1;
- (void)_parsecABGroupIdentifierDidChange:(id)arg1;
- (void)_defaultSearchEngineDidChange:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)dynamicBarAnimator:(id)arg1 canTransitionToState:(long long)arg2 byDraggingWithOffset:(double)arg3;
- (double)dynamicBarAnimator:(id)arg1 minimumTopBarHeightForOffset:(double)arg2;
- (void)dynamicBarAnimatorOutputsDidChange:(id)arg1;
- (void)_initSubviews;
- (void)_downloadManagerDidFinishLastDownload:(id)arg1;
- (void)_downloadsTotalProgressDidChange:(id)arg1;
- (void)_hideCrashBanner;
- (void)_windowDidResignKeyWindow:(id)arg1;
- (void)safariWindow:(id)arg1 statusBarChangedFromHeight:(double)arg2 toHeight:(double)arg3;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) UIWindow *window;

@end

