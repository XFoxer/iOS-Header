//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "UGCImagePreviewConforming-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class MapsScrollableStackView, NSArray, NSNumber, NSString;
@protocol UGCImagePreviewingDataSource;

__attribute__((visibility("hidden")))
@interface UGCImagePreviewViewController : UIViewController <UIScrollViewDelegate, UGCImagePreviewConforming>
{
    MapsScrollableStackView *_imageContainerView;
    _Bool _isTransitioning;
    NSNumber *_originalIndex;
    id <UGCImagePreviewingDataSource> _dataSource;
    unsigned long long _currentIndex;
    NSString *_downloadToken;
    NSArray *_photoImageViews;
    NSArray *_currentPhotoDownloads;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *currentPhotoDownloads; // @synthesize currentPhotoDownloads=_currentPhotoDownloads;
@property(readonly, nonatomic) NSArray *photoImageViews; // @synthesize photoImageViews=_photoImageViews;
@property(nonatomic) unsigned long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) __weak id <UGCImagePreviewingDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)reloadImagePreviews;
@property(readonly, nonatomic) unsigned long long indexOfVisibleView;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_doneButtonPressed;
- (void)_updateAppearance;
- (void)_fetchPhoto:(id)arg1 withIndex:(unsigned long long)arg2;
- (void)_cancelPhotoDownloadAtIndex:(unsigned long long)arg1;
- (void)_loadImageAtIndex;
- (void)viewDidLoad;
@property(readonly, nonatomic) NSString *downloadToken; // @synthesize downloadToken=_downloadToken;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

