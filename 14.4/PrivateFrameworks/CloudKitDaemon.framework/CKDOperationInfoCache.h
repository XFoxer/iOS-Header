//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudKit/CKSQLite.h>

@class NSMutableDictionary, NSObject;
@protocol OS_dispatch_queue;

@interface CKDOperationInfoCache : CKSQLite
{
    NSObject<OS_dispatch_queue> *_cacheQueue;
    NSObject<OS_dispatch_queue> *_cacheDelegateQueue;
    NSMutableDictionary *_delegateWrappersByOperationID;
}

+ (id)dbFileName;
+ (id)sharedCache;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *delegateWrappersByOperationID; // @synthesize delegateWrappersByOperationID=_delegateWrappersByOperationID;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cacheDelegateQueue; // @synthesize cacheDelegateQueue=_cacheDelegateQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cacheQueue; // @synthesize cacheQueue=_cacheQueue;
- (void)registerCacheEvictionActivity;
- (id)_locked_operationInfoForID:(id)arg1;
- (void)registerAttemptForOperationWithID:(id)arg1;
- (void)archiveCallback:(id)arg1 forOperationID:(id)arg2;
- (void)_lockedArchiveCallback:(id)arg1 forOperationID:(id)arg2;
- (void)setOperationInfo:(id)arg1 forOperationID:(id)arg2 appContainerTuple:(id)arg3 accountID:(id)arg4;
- (void)_lockedSetOperationInfo:(id)arg1 forOperationID:(id)arg2 appContainerTuple:(id)arg3 accountID:(id)arg4;
- (void)deleteAllInfoForOperationWithID:(id)arg1;
- (void)expungeOperationInfoForDeletedAccountID:(id)arg1;
- (id)allOutstandingOperationIDsForAppContainerTuple:(id)arg1 accountID:(id)arg2;
- (id)outstandingOperationInfosForIDs:(id)arg1;
- (id)resumableOperationInfosByAppContainerTuplesWithProgressPurged:(_Bool)arg1;
- (void)enumerateCallbacksForOperationWithID:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)_locked_enumerateCallbacksForOperationWithID:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)operationInfoMetadataForOperationWithID:(id)arg1;
- (void)unregisterDelegate:(id)arg1 forOperationWithID:(id)arg2;
- (void)registerDelegate:(id)arg1 forOperationWithID:(id)arg2;
- (id)_initWithCacheDir:(id)arg1;

@end

