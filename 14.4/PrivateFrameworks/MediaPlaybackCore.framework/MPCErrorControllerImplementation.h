//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <MediaPlaybackCore/MFErrorController-Protocol.h>

@class MPAVItem, MPCMediaFoundationTranslator, MPCPlaybackEngine, NSMutableSet, NSString;
@protocol MPCExternalPlaybackRouter;

@interface MPCErrorControllerImplementation : NSObject <MFErrorController>
{
    _Bool itemsHavePlayed;
    NSString *preferredFirstContentItemID;
    MPCPlaybackEngine *_playbackEngine;
    MPCMediaFoundationTranslator *_translator;
    NSMutableSet *_failedItemsIdentifiers;
    id <MPCExternalPlaybackRouter> _externalPlaybackRouter;
    MPAVItem *_lastItemUsedForErrorResolution;
}

- (void).cxx_destruct;
@property(retain, nonatomic) MPAVItem *lastItemUsedForErrorResolution; // @synthesize lastItemUsedForErrorResolution=_lastItemUsedForErrorResolution;
@property(retain, nonatomic) id <MPCExternalPlaybackRouter> externalPlaybackRouter; // @synthesize externalPlaybackRouter=_externalPlaybackRouter;
@property(retain, nonatomic) NSMutableSet *failedItemsIdentifiers; // @synthesize failedItemsIdentifiers=_failedItemsIdentifiers;
@property(readonly, nonatomic) MPCMediaFoundationTranslator *translator; // @synthesize translator=_translator;
@property(nonatomic) __weak MPCPlaybackEngine *playbackEngine; // @synthesize playbackEngine=_playbackEngine;
@property(nonatomic) _Bool itemsHavePlayed; // @synthesize itemsHavePlayed;
@property(copy, nonatomic) NSString *preferredFirstContentItemID; // @synthesize preferredFirstContentItemID;
- (_Bool)shouldHandleFirstItemFailure:(id)arg1 item:(id)arg2;
- (_Bool)isAssetUnavailableFailure:(id)arg1;
- (_Bool)isUnrecoverableAssetLoadingError:(id)arg1;
- (_Bool)isQueueLoadingFailure:(id)arg1;
- (_Bool)isFirstItemFailure:(id)arg1 item:(id)arg2;
- (_Bool)canHandleFirstItemFailure;
- (void)_notifyObserversForError:(id)arg1 item:(id)arg2;
- (long long)_resolutionForPlaybackError:(id)arg1 item:(id)arg2;
- (void)_playbackFailedWithError:(id)arg1 item:(id)arg2 canResolve:(_Bool)arg3 proposedResolution:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)reportCriticalError:(id)arg1 forItem:(id)arg2;
- (void)resolveError:(id)arg1 forItem:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)reset;
- (id)initWithPlaybackEngine:(id)arg1 translator:(id)arg2 externalPlaybackRouter:(id)arg3;

@end

