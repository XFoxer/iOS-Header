//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SRStarkConfirmationSnippetControllerDelegate-Protocol.h"
#import "SRStarkDisambiguationSnippetControllerDataSource-Protocol.h"
#import "SRStarkDisambiguationSnippetControllerDelegate-Protocol.h"
#import "SRStarkGatekeeperHeaderViewDelegate-Protocol.h"
#import "SRStarkItemControllerDelegate-Protocol.h"
#import "SRStarkViewDelegate-Protocol.h"
#import "SiriUIPresentation-Protocol.h"

@class AFAnalyticsTurnBasedInstrumentationContext, AceObject, NSArray, NSString, NSTimer, SASRequestOptions, SRStarkView;
@protocol SRStarkItemController, SiriUIPresentationDataSource, SiriUIPresentationDelegate;

@interface SRCarDisplayViewController : UIViewController <SRStarkConfirmationSnippetControllerDelegate, SRStarkDisambiguationSnippetControllerDataSource, SRStarkDisambiguationSnippetControllerDelegate, SRStarkGatekeeperHeaderViewDelegate, SRStarkItemControllerDelegate, SRStarkViewDelegate, SiriUIPresentation>
{
    AceObject *_gatekeeperHeaderDataSource;
    _Bool _siriIsIdleAndQuiet;
    _Bool _autoDismissScheduled;
    _Bool _isRightHandDrive;
    _Bool _screenSupportsTouchInteraction;
    _Bool _hidingHeaderForNewRequest;
    id <SiriUIPresentationDataSource> _dataSource;
    id <SiriUIPresentationDelegate> _delegate;
    UIViewController<SRStarkItemController> *_currentSnippetController;
    SASRequestOptions *_requestOptions;
    double _selectButtonTimeInterval;
    NSTimer *_selectButtonHoldToTalkTimer;
    AFAnalyticsTurnBasedInstrumentationContext *_currentTurnContext;
    NSArray *_delayedAceCommands;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSArray *delayedAceCommands; // @synthesize delayedAceCommands=_delayedAceCommands;
@property(nonatomic, getter=isHidingHeaderForNewRequest) _Bool hidingHeaderForNewRequest; // @synthesize hidingHeaderForNewRequest=_hidingHeaderForNewRequest;
@property(retain, nonatomic, getter=_currentTurnContext, setter=_setCurrentTurnContext:) AFAnalyticsTurnBasedInstrumentationContext *currentTurnContext; // @synthesize currentTurnContext=_currentTurnContext;
@property(retain, nonatomic, getter=_selectButtonHoldToTalkTimer, setter=_setSelectButtonHoldToTalkTimer:) NSTimer *selectButtonHoldToTalkTimer; // @synthesize selectButtonHoldToTalkTimer=_selectButtonHoldToTalkTimer;
@property(nonatomic, getter=_selectButtonTimeInterval, setter=_setSelectButtonTimeInterval:) double selectButtonTimeInterval; // @synthesize selectButtonTimeInterval=_selectButtonTimeInterval;
@property(nonatomic, getter=_screenSupportsTouchInteraction) _Bool screenSupportsTouchInteraction; // @synthesize screenSupportsTouchInteraction=_screenSupportsTouchInteraction;
@property(retain, nonatomic, getter=_requestOptions, setter=_setRequestOptions:) SASRequestOptions *requestOptions; // @synthesize requestOptions=_requestOptions;
@property(retain, nonatomic, getter=_currentSnippetController, setter=_setCurrentSnippetController:) UIViewController<SRStarkItemController> *currentSnippetController; // @synthesize currentSnippetController=_currentSnippetController;
@property(nonatomic) __weak id <SiriUIPresentationDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <SiriUIPresentationDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void)_performAceCommands:(id)arg1;
- (void)_stopSpeakingAndPerformAceCommandsAfterSpeakingHasCompleted:(id)arg1;
- (_Bool)_canShowWhileLocked;
- (void)gatekeeperHeaderDismissalButtonPressed:(id)arg1;
- (void)confirmationSnippetControllerRequestsRestartSpeechSynthesis:(id)arg1;
- (void)confirmationSnippetControllerRequestsStopSpeechSynthesis:(id)arg1;
- (void)disambiguationSnippetController:(id)arg1 performAceCommands:(id)arg2;
- (_Bool)starkDisambiguationSnippetControllerIsRightHandDrive:(id)arg1;
- (_Bool)isShowingGatekeeperHeader;
- (void)confirmationSnippetControllerRequestsDismissal:(id)arg1;
- (void)confirmationSnippetController:(id)arg1 performAceCommands:(id)arg2;
- (void)starkView:(id)arg1 requestsDismissalWithDismissalReason:(unsigned long long)arg2;
- (void)starkView:(id)arg1 didRemoveSnippetView:(id)arg2;
- (void)starkView:(id)arg1 didReceiveBackButtonTapGestureRecognizer:(id)arg2;
- (void)starkViewDidReceiveSelectSiriEvent:(id)arg1;
- (_Bool)_isEligibleForHoldToTalk;
- (void)_selectButtonHoldToTalkIntervalFired:(id)arg1;
- (void)pressesEnded:(id)arg1 withEvent:(id)arg2;
- (void)pressesBegan:(id)arg1 withEvent:(id)arg2;
- (_Bool)_buttons:(id)arg1 hasType:(long long)arg2;
- (void)didUpdateFocusInContext:(id)arg1 withAnimationCoordinator:(id)arg2;
- (void)_dismissForIdle;
- (void)_cancelAutoDismiss;
- (void)_scheduleAutoDismiss;
- (void)siriIsIdleAndQuietStatusDidChange:(_Bool)arg1;
- (_Bool)shouldUseEventDrivenIdleAndQuietUpdates;
- (_Bool)supportsVisualPresentationForConversationItem:(id)arg1;
- (_Bool)shouldProceedToNextCommandAtSpeechSynthesisEnd;
- (_Bool)shouldResumeInterruptedAudioPlayback;
- (void)startNewConversation;
- (_Bool)shouldBlockURLOpenOnTTS:(id)arg1;
- (void)siriDidStopSpeakingWithIdentifier:(id)arg1 speechQueueIsEmpty:(_Bool)arg2;
- (void)siriDidStartSpeakingWithIdentifier:(id)arg1;
- (void)conversation:(id)arg1 didUpdateItemsAtIndexPaths:(id)arg2;
- (void)conversation:(id)arg1 didInsertItemsAtIndexPaths:(id)arg2;
- (_Bool)_isStarkSupportedSnippetClass:(id)arg1;
- (void)_updateItemsAtIndexPath:(id)arg1;
- (void)siriDidTransitionFromState:(long long)arg1 event:(long long)arg2;
- (id)preferredFocusEnvironments;
- (id)viewController;
- (long long)options;
- (void)starkItemControllerRequestsReschedulingAutoDismiss:(id)arg1;
- (void)starkItemController:(id)arg1 requestsFullScreen:(_Bool)arg2;
- (void)starkItemControllerRequestsDismissal:(id)arg1 withDismissalReason:(unsigned long long)arg2;
- (void)starkItemController:(id)arg1 synthesizeSpeechWithText:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_setGatekeeperHeaderForAceObject:(id)arg1 currentTurnContext:(id)arg2;
- (void)_notifyPresentationForAppBundleIdentifier:(id)arg1;
- (void)_setGatekeeperHeaderForRequestOptions:(id)arg1 currentTurnContext:(id)arg2;
- (_Bool)_isSnippetControllerUsingSystemStyle:(id)arg1;
- (_Bool)_shouldAnimateSnippetViewTransitionFrom:(id)arg1 to:(id)arg2;
- (void)_clearSnippetDisplay;
- (void)_dismissWithReason:(unsigned long long)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)loadView;
- (void)siriRequestWillStartWithRequestOptions:(id)arg1;
- (void)_configureForRequestOptions:(id)arg1;
- (void)configureForRequestOptions:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2 delegate:(id)arg3 dataSource:(id)arg4;
- (id)initWithDelegate:(id)arg1 dataSource:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) SRStarkView *view; // @dynamic view;

@end

