//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "LoadableResource-Protocol.h"
#import "LoadingControllerDelegate-Protocol.h"
#import "QuickWebsiteSearchEventListener-Protocol.h"
#import "ReadingListMetadataProvider-Protocol.h"
#import "SFFormAutoFillControllerDelegate-Protocol.h"
#import "WBSFluidProgressControllerWindowDelegate-Protocol.h"
#import "WBSFluidProgressStateSource-Protocol.h"
#import "WBSOrderedTab-Protocol.h"
#import "WBSTabItemSearchSupport-Protocol.h"
#import "WBSTranslationConsentAlertHelperDelegate-Protocol.h"
#import "WBSTranslationContextDelegate-Protocol.h"
#import "WKNavigationDelegatePrivate-Protocol.h"
#import "WKUIDelegatePrivate-Protocol.h"
#import "_SFBrowserDocument-Protocol.h"
#import "_SFDialogControllerDelegate-Protocol.h"
#import "_SFDialogPresenting-Protocol.h"
#import "_SFDialogViewControllerPresenting-Protocol.h"
#import "_SFDownloadDelegate-Protocol.h"
#import "_SFFindOnPageViewDelegate-Protocol.h"
#import "_SFLinkPreviewHandler-Protocol.h"
#import "_SFMediaRecordingDocument-Protocol.h"
#import "_SFNavigationIntentHandling-Protocol.h"
#import "_SFPageLoadErrorControllerDelegate-Protocol.h"
#import "_SFPrintControllerDelegate-Protocol.h"
#import "_SFQuickLookDocumentSource-Protocol.h"
#import "_SFReaderControllerDelegate-Protocol.h"
#import "_SFWebViewDelegate-Protocol.h"
#import "_WKDiagnosticLoggingDelegate-Protocol.h"
#import "_WKFullscreenDelegate-Protocol.h"
#import "_WKIconLoadingDelegate-Protocol.h"
#import "_WKInputDelegate-Protocol.h"
#import "_WKWebAuthenticationPanelDelegate-Protocol.h"

@class BrowserController, CSSearchableItemAttributeSet, FindOnPageCompletionProvider, FindOnPageView, LinkPreviewViewController, LoadingController, NSArray, NSDictionary, NSError, NSMutableArray, NSNumber, NSPointerArray, NSString, NSTimer, NSURL, NSUUID, NSUserActivity, PageLoadTest, PageLoadTestStatistics, SFBrowserDocumentTrackerInfo, STBlockingViewController, TabBarItem, TabDocumentView, TabOverviewItem, TiltedTabItem, TouchIconFetcher, UIImage, UIView, WBSFluidProgressController, WBSFluidProgressState, WBSHistoryContextController, WBSHistoryVisit, WBSSameDocumentNavigationToHistoryVisitCorrelator, WBSTranslationContext, WBSURLSpoofingMitigator, WKBackForwardListItem, WebBookmark, _SFApplicationManifestFetcher, _SFBrowserConfiguration, _SFCalendarEventDetector, _SFDialogController, _SFDownload, _SFFluidProgressView, _SFFormAutoFillController, _SFInjectedJavaScriptController, _SFNavigationBarItem, _SFNavigationIntent, _SFNavigationUtilitiesManager, _SFPageLoadErrorController, _SFPinnableBanner, _SFPrintController, _SFQuickLookDocument, _SFQuickLookDocumentWriter, _SFReaderController, _SFReloadOptionsController, _SFSafariSharingExtensionController, _SFSafeBrowsingController, _SFSecIdentityPreferencesController, _SFTelephonyNavigationMitigationPolicy, _SFWebClipMetadataFetcher, _SFWebView, _WKActivatedElementInfo, _WKRemoteObjectInterface, _WKSessionState, _WKUserInitiatedAction;
@protocol LoadProgressObserver, SFReaderContext, TabDocumentDelegate, UIDragSession;

@interface TabDocument : NSObject <LoadingControllerDelegate, QuickWebsiteSearchEventListener, SFFormAutoFillControllerDelegate, WBSFluidProgressControllerWindowDelegate, WBSFluidProgressStateSource, WKNavigationDelegatePrivate, WKUIDelegatePrivate, _SFDialogControllerDelegate, _SFDialogViewControllerPresenting, _SFFindOnPageViewDelegate, _SFLinkPreviewHandler, _SFPageLoadErrorControllerDelegate, _SFPrintControllerDelegate, _SFReaderControllerDelegate, _SFWebViewDelegate, _WKDiagnosticLoggingDelegate, _WKFullscreenDelegate, _WKIconLoadingDelegate, _WKInputDelegate, _WKWebAuthenticationPanelDelegate, WBSTranslationConsentAlertHelperDelegate, WBSTranslationContextDelegate, _SFQuickLookDocumentSource, ReadingListMetadataProvider, LoadableResource, WBSTabItemSearchSupport, WBSOrderedTab, _SFBrowserDocument, _SFDialogPresenting, _SFDownloadDelegate, _SFMediaRecordingDocument, _SFNavigationIntentHandling>
{
    unsigned long long _progressAnimationSuppressedCount;
    NSString *_EVOrganizationName;
    NSUserActivity *_userActivity;
    NSError *_lastLoadError;
    NSError *_lastLoadErrorForFormatMenu;
    WBSURLSpoofingMitigator *_URLSpoofingMitigator;
    _WKSessionState *_savedSessionState;
    _WKRemoteObjectInterface *_siteSpecificSearchEventListenerInterface;
    _SFSafariSharingExtensionController *_sharingExtensionController;
    _SFReloadOptionsController *_reloadOptionsController;
    _SFCalendarEventDetector *_calendarEventDetector;
    _SFInjectedJavaScriptController *_activityJSController;
    _SFWebClipMetadataFetcher *_webClipMetadataFetcher;
    TouchIconFetcher *_touchIconFetcher;
    NSMutableArray *_fallbackURLs;
    unsigned long long _lastReaderDeactivationMode;
    FindOnPageCompletionProvider *_findCompletionProvider;
    _SFFormAutoFillController *_autoFillController;
    CDUnknownBlockType _autoFillAuthenticationCompletionBlock;
    LoadingController *_loadingController;
    WBSFluidProgressController *_fluidProgressController;
    NSDictionary *_initialArticleScrollDictionaryForCloudTab;
    NSURL *_overrideURLForHTTPAuthenticationDialog;
    WKBackForwardListItem *_parentTabItem;
    _SFApplicationManifestFetcher *_applicationManifestFetcher;
    _SFDownload *_activeDownload;
    TabDocumentView *_cachedView;
    unsigned long long _currentUsageState;
    NSURL *_lastURLForWhichUsageStateWasSet;
    long long _concurrentNavigationActionPolicyDecisions;
    _SFFluidProgressView *_progressView;
    _SFNavigationBarItem *_navigationBarItem;
    _SFDialogController *_dialogController;
    _SFReaderController *_readerContext;
    WebBookmark *_bookmarkForIconFetching;
    WKBackForwardListItem *_backForwardListItemForCurrentAppLinkBannerCheck;
    _SFPinnableBanner *_appBannerPendingFirstPaint;
    _SFTelephonyNavigationMitigationPolicy *_telephonyNavigationPolicy;
    _WKUserInitiatedAction *_lastUserInitiatedAction;
    _SFSecIdentityPreferencesController *_secIdentityPreferencesController;
    PageLoadTest *_pageLoadTest;
    NSTimer *_donateTextTimer;
    NSTimer *_unresponsiveWebProcessTimer;
    CDUnknownBlockType _unresponsiveWebProcessBlock;
    _SFNavigationIntent *_deferredDropNavigationIntent;
    unsigned long long _deferredDropNavigationIntentGeneration;
    NSNumber *_deferredDropWasHandledByWebKit;
    id <UIDragSession> _webKitDragSession;
    unsigned long long _cachedMediaStateIcon;
    NSPointerArray *_spawnedTabDocuments;
    NSURL *_cachedCanonicalURL;
    CDUnknownBlockType _pendingNavigationActionDueToExternalSchemePromptHandler;
    NSURL *_cachedURL;
    id _faviconToken;
    NSURL *_originalURL;
    NSTimer *_updateFaviconTimer;
    NSURL *_urlToReloadForcingContentBlockers;
    _Bool _enableContentBlockersWhenReloading;
    _SFNavigationUtilitiesManager *_navigationUtilitiesManager;
    NSString *_domainWhereUserDeclinedAutomaticStrongPassword;
    _WKActivatedElementInfo *_elementInfoToAnimateForNextDownload;
    _SFDownload *_downloadReflectedInFluidProgress;
    _Bool _closeWhenNextDownloadStarts;
    _Bool _loadNextNavigationInline;
    _Bool _EVOrganizationNameIsValid;
    _Bool _forwardActivityToCoreSpotlight;
    _Bool _loadWasUserDriven;
    _Bool _userDrivenLoadWasConsumed;
    _Bool _shouldDismissReaderInReponseToSameDocumentNavigation;
    _Bool _allowURLAsTitle;
    _Bool _wasOpenedFromHistory;
    _Bool _displayingStandaloneImage;
    _Bool _displayingStandaloneMedia;
    _Bool _quickLookDocumentCheckCompleted;
    _Bool _didFirstPaint;
    _Bool _shouldSuppressDialogsThatBlockWebProcessForProvisionalNavigation;
    _Bool _shouldResetPrintSuppressionOnNextCommit;
    _Bool _sourceApplicationIsValid;
    _Bool _isDisplayingTelephonyPrompt;
    _Bool _isDecidingNavigationResponsePolicyForMainFrameDownload;
    NSURL *_urlForDisplayedContent;
    _Bool _hasFocusedInputFieldOnCurrentPage;
    _Bool _suppressCrashBanner;
    _Bool _needsSendTelemetryForProvisionalLoad;
    _Bool _webViewIsLoading;
    _Bool _gestureRequiresGoBackToParentTab;
    _Bool _didCommitCurrentNavigation;
    _Bool _didQuickStopWhileBlank;
    _Bool _allowsExternalRedirectWithoutPrompting;
    _SFQuickLookDocumentWriter *_quickLookDocumentWriter;
    NSString *_suggestedFilenameForNextCommit;
    _Bool _shouldReflectTranslationAsFluidProgress;
    struct {
        long long impressionProvenance;
        unsigned int shouldIgnoreURLAsAnalyticsImpression:1;
        unsigned int shouldNotifyImpressionAnalyticsRecorder:1;
        unsigned int shouldNotifyImpressionAnalyticsRecorderWhenDisplayedToUser:1;
    } _flags;
    unsigned long long _phishingURLClassification;
    _Bool _hasDoneReaderAvailabilityDetection;
    _Bool _matchedLastSearch;
    _Bool _wasLoadedWithContentBlockersEnabled;
    _Bool _wasOpenedFromLink;
    _Bool _showingReader;
    _Bool _shouldRestoreReader;
    _Bool _shouldRevealAppLinkBannerForNextCommit;
    _Bool _siteCustomIconPrecomposed;
    _Bool _suppressingProgressAnimationForNavigationGesture;
    _Bool _wantsReaderWhenActivated;
    _Bool _hibernatedDueToMemoryWarning;
    _Bool _webViewIsFullscreen;
    _Bool _exitingElementFullscreen;
    _Bool _allowsProgrammaticFocusToBeginInputSession;
    _Bool _showingContinuous;
    _Bool _showingInlineDialog;
    _Bool _persistWhenHibernated;
    _Bool _isBlank;
    _Bool _isPlaceholder;
    _Bool _preparingForNewUserActivity;
    _Bool _hibernated;
    _Bool _supportsReuseForSpotlightSearch;
    _Bool _closed;
    _Bool _performingFirstLoadAfterOpenInBackground;
    _Bool _performingRedirectAfterOpenInBackground;
    _Bool _didFinishDocumentLoad;
    _Bool _didFirstLayout;
    _Bool _contentIsReadyForSnapshot;
    _Bool _mediaCaptureEnabled;
    _Bool _isMediaSuspendedForScreenTime;
    _Bool _hasFormControlInteraction;
    _Bool _active;
    WBSFluidProgressState *_fluidProgressState;
    NSArray *_titleWords;
    NSString *_lastSearchTerm;
    NSString *_titleForLastSearch;
    NSString *_URLStringForLastSearch;
    NSArray *_URLStringComponents;
    WBSHistoryContextController *_contextController;
    WBSTranslationContext *_translationContext;
    _SFWebView *_webView;
    SFBrowserDocumentTrackerInfo *_trackerInfo;
    BrowserController *_browserController;
    TabDocument *_parentTabDocumentForBackClosesSpawnedTab;
    FindOnPageView *_findOnPageView;
    _SFQuickLookDocument *_quickLookDocument;
    long long _readerViewTopScrollOffset;
    _SFPinnableBanner *_appBanner;
    NSString *_sourceApplicationBundleIdentifierForNextCommit;
    long long _externalAppRedirectState;
    UIImage *_siteCustomIcon;
    TabOverviewItem *_tabOverviewItem;
    TiltedTabItem *_tiltedTabItem;
    WebBookmark *_readingListBookmark;
    unsigned long long _sessionStateRestorationSource;
    id <TabDocumentDelegate> _delegate;
    id <LoadProgressObserver> _loadProgressObserver;
    _SFBrowserConfiguration *_configuration;
    LinkPreviewViewController *_linkPreviewViewController;
    PageLoadTestStatistics *_pageLoadStatistics;
    NSURL *_URLFromExternalApplication;
    _SFPageLoadErrorController *_pageLoadErrorController;
    WBSSameDocumentNavigationToHistoryVisitCorrelator *_sameDocumentNavigationToHistoryVisitCorrelator;
    TabBarItem *_tabBarItem;
    _SFSafeBrowsingController *_safeBrowsingController;
    NSURL *_tabReuseURL;
    NSUUID *_UUID;
    double _lastViewedTime;
    WBSHistoryVisit *_lastVisit;
    _SFPrintController *_printController;
    NSUUID *_ownerUUID;
    CSSearchableItemAttributeSet *_searchableItemAttributes;
    NSString *_sourceApplicationBundleIdentifier;
    NSArray *_ancestorUUIDs;
    _SFWebView *_readerWebView;
    long long _policy;
    STBlockingViewController *_associatedBlockingViewController;
    struct CGPoint _scrollPoint;
}

+ (id)urlForExternalURL:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic, getter=isActive) _Bool active; // @synthesize active=_active;
@property(readonly, nonatomic) SFBrowserDocumentTrackerInfo *trackerInfo; // @synthesize trackerInfo=_trackerInfo;
@property(readonly, nonatomic) _SFWebView *webView; // @synthesize webView=_webView;
@property(readonly, nonatomic) _Bool wasLoadedWithContentBlockersEnabled; // @synthesize wasLoadedWithContentBlockersEnabled=_wasLoadedWithContentBlockersEnabled;
@property(readonly, nonatomic) WBSTranslationContext *translationContext; // @synthesize translationContext=_translationContext;
@property(readonly, nonatomic) _SFReloadOptionsController *reloadOptionsController; // @synthesize reloadOptionsController=_reloadOptionsController;
@property(nonatomic) _Bool matchedLastSearch; // @synthesize matchedLastSearch=_matchedLastSearch;
@property(copy, nonatomic) NSArray *URLStringComponents; // @synthesize URLStringComponents=_URLStringComponents;
@property(copy, nonatomic) NSString *URLStringForLastSearch; // @synthesize URLStringForLastSearch=_URLStringForLastSearch;
@property(copy, nonatomic) NSString *titleForLastSearch; // @synthesize titleForLastSearch=_titleForLastSearch;
@property(copy, nonatomic) NSString *lastSearchTerm; // @synthesize lastSearchTerm=_lastSearchTerm;
@property(copy, nonatomic) NSArray *titleWords; // @synthesize titleWords=_titleWords;
@property(readonly, nonatomic) WBSFluidProgressState *progressState; // @synthesize progressState=_fluidProgressState;
- (id)translationConsentAlertHelperViewControllerToPresentDetailsFrom:(id)arg1;
- (void)_translationContextStateDidChange:(id)arg1;
- (void)translationContextNeedsScrollHeightVisibilityUpdate:(id)arg1;
- (void)translationContext:(id)arg1 shouldReportProgressInUnifiedField:(_Bool)arg2;
- (void)translationContext:(id)arg1 showTranslationErrorAlertWithTitle:(id)arg2 message:(id)arg3;
- (id)safariApplicationVersionForTranslationContext:(id)arg1;
- (void)translationContext:(id)arg1 showFeedbackConsentAlertWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)translationContext:(id)arg1 showFirstTimeConsentAlertWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)translationContext:(id)arg1 urlForCurrentPageWithCompletionHandler:(CDUnknownBlockType)arg2;
- (_Bool)translationContextIsUsingPrivateBrowsing:(id)arg1;
- (void)translationContextReloadPageInOriginalLanguage:(id)arg1;
@property(readonly, nonatomic) double lastActivationTime;
@property(readonly, nonatomic, getter=isClosing) _Bool closing;
@property(readonly, nonatomic) _Bool shouldSelectOriginatingTabWhenClosed;
@property(readonly, nonatomic) _Bool isPinnedTab;
@property(readonly, nonatomic) NSString *windowIdentifier;
@property(readonly, nonatomic) NSArray *ancestorTabIdentifiers;
@property(readonly, nonatomic) NSString *identifier;
- (void)_webViewDidExitElementFullscreen:(id)arg1;
- (void)_webViewWillExitElementFullscreen:(id)arg1;
- (void)_unresponsiveWebProcessTimerFired:(id)arg1;
- (void)fetchMetadataForBookmark:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentDialog:(id)arg1 sender:(id)arg2;
- (void)createReaderWebViewForReaderController:(id)arg1;
- (id)readerURLForReaderController:(id)arg1;
- (void)prepareToUseReader;
- (void)readerController:(id)arg1 didExtractArticleText:(id)arg2 withMetadata:(id)arg3;
- (void)readerController:(id)arg1 didTwoFingerTapLinkInReaderWithContext:(id)arg2;
- (void)readerController:(id)arg1 didClickLinkRequestingNewWindowInReaderWithRequest:(id)arg2;
- (void)readerController:(id)arg1 didClickLinkInReaderWithRequest:(id)arg2;
- (void)readerController:(id)arg1 didDeactivateReaderWithMode:(unsigned long long)arg2;
- (void)readerController:(id)arg1 didDetermineReaderAvailability:(id)arg2 dueTo:(long long)arg3;
- (void)pageLoadErrorController:(id)arg1 allowLegacyTLSConnectionForURL:(id)arg2 navigateToURL:(id)arg3;
- (_Bool)pageLoadErrorControllerShouldReloadAfterError:(id)arg1;
- (_Bool)pageLoadErrorControllerShouldPermanentlyAcceptCertificate:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 presentViewController:(id)arg2;
- (void)pageLoadErrorControllerClosePage:(id)arg1;
- (id)pageLoadErrorControllerGetSecIdentityPreferencesController:(id)arg1;
- (void)pageLoadErrorController:(id)arg1 setAllowsSpecificHTTPSCertificate:(id)arg2 forHost:(id)arg3;
- (void)pageLoadErrorController:(id)arg1 loadFailedRequestAfterError:(id)arg2;
- (_Bool)pageLoadErrorControllerShouldHandleCertificateError:(id)arg1;
- (void)pageLoadErrorControllerDidAddAlert:(id)arg1;
- (void)dialogController:(id)arg1 dismissViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;
- (void)dialogController:(id)arg1 presentViewController:(id)arg2 withAdditionalAnimations:(CDUnknownBlockType)arg3;
- (void)dialogController:(id)arg1 didDismissDialog:(id)arg2;
- (void)dialogController:(id)arg1 willPresentDialog:(id)arg2;
- (long long)dialogController:(id)arg1 presentationPolicyForDialog:(id)arg2;
- (id)loadingDialogPageTitleForPrintController:(id)arg1;
- (id)pageTitleForPrintController:(id)arg1;
- (id)URLStringForPrintController:(id)arg1;
- (id)presentingViewControllerForPrintController:(id)arg1;
- (_Bool)printControllerCanPresentPrintUI:(id)arg1;
- (void)printController:(id)arg1 didCreatePrintInfo:(id)arg2;
- (_Bool)printControllerPageIsLoading:(id)arg1;
- (_Bool)printControllerShouldPrintReader:(id)arg1;
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)formAutoFillControllerShouldShowIconsInPasswordPicker:(id)arg1;
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)arg1;
- (void)formAutoFillControllerUserChoseToUseGeneratedPassword:(id)arg1;
- (_Bool)formAutoFillControllerDidUserDeclineAutomaticStrongPasswordForCurrentDomain:(id)arg1;
- (_Bool)formAutoFillControllerShouldDisableStreamlinedLogin:(id)arg1;
- (id)formAutoFillControllerURLForFormAutoFill:(id)arg1;
- (_Bool)formAutoFillControllerCanPrefillForm:(id)arg1;
- (struct UIEdgeInsets)_webView:(id)arg1 finalObscuredInsetsForScrollView:(id)arg2 withVelocity:(struct CGPoint)arg3 targetContentOffset:(inout struct CGPoint *)arg4;
- (void)updateFindCompletionProviderWithMatchesCount:(unsigned long long)arg1 forString:(id)arg2 forFindOnPageView:(id)arg3;
- (void)visibilityWillChangeForFindOnPageView:(id)arg1;
- (id)webViewForFindOnPageView:(id)arg1;
- (void)didAutoDetectSiteSpecificSearchProviderWithOriginatingURL:(id)arg1 searchURLTemplate:(id)arg2;
- (void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3 valueDictionary:(id)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessageWithEnhancedPrivacy:(id)arg2 description:(id)arg3;
- (void)_webView:(id)arg1 logDiagnosticMessageWithValue:(id)arg2 description:(id)arg3 value:(id)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessageWithResult:(id)arg2 description:(id)arg3 result:(long long)arg4;
- (void)_webView:(id)arg1 logDiagnosticMessage:(id)arg2 description:(id)arg3;
- (void)loadingControllerWillStartUserDrivenLoad:(id)arg1;
- (void)loadingController:(id)arg1 willLoadRequest:(id)arg2 userDriven:(_Bool)arg3;
- (long long)_webView:(id)arg1 decidePolicyForFocusedElement:(id)arg2;
- (void)_webView:(id)arg1 insertTextSuggestion:(id)arg2 inInputSession:(id)arg3;
- (void)_webView:(id)arg1 accessoryViewCustomButtonTappedInFormInputSession:(id)arg2;
- (void)_webView:(id)arg1 willSubmitFormValues:(id)arg2 userObject:(id)arg3 submissionHandler:(CDUnknownBlockType)arg4;
- (id)_webViewAdditionalContextForStrongPasswordAssistance:(id)arg1;
- (void)_webView:(id)arg1 didResignInputElementStrongPasswordAppearanceWithUserInfo:(id)arg2;
- (_Bool)_webView:(id)arg1 focusRequiresStrongPasswordAssistance:(id)arg2;
- (void)_webView:(id)arg1 didStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 willStartInputSession:(id)arg2;
- (void)_webView:(id)arg1 hasVideoInPictureInPictureDidChange:(_Bool)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDragSession:(id)arg2;
- (long long)_webView:(id)arg1 dataOwnerForDropSession:(id)arg2;
- (void)_webView:(id)arg1 didChangeSafeAreaShouldAffectObscuredInsets:(_Bool)arg2;
- (_Bool)_webView:(id)arg1 fileUploadPanelContentIsManagedWithInitiatingFrame:(id)arg2;
- (void)_webView:(id)arg1 requestGeolocationAuthorizationForURL:(id)arg2 frame:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (id)_webView:(id)arg1 adjustedDataInteractionItemProvidersForItemProvider:(id)arg2 representingObjects:(id)arg3 additionalData:(id)arg4;
- (void)_webView:(id)arg1 dataInteractionOperationWasHandled:(_Bool)arg2 forSession:(id)arg3 itemProviders:(id)arg4;
- (_Bool)_webView:(id)arg1 performDataInteractionOperationWithItemProviders:(id)arg2;
- (unsigned long long)_webView:(id)arg1 willUpdateDataInteractionOperationToOperation:(unsigned long long)arg2 forSession:(id)arg3;
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 session:(id)arg3 didEndWithOperation:(unsigned long long)arg4;
- (void)_webView:(id)arg1 dataInteraction:(id)arg2 sessionWillBegin:(id)arg3;
- (void)_webView:(id)arg1 imageOrMediaDocumentSizeChanged:(struct CGSize)arg2;
- (void)_webView:(id)arg1 printFrame:(id)arg2;
- (void)_webView:(id)arg1 decideWebApplicationCacheQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 totalBytesNeeded:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 decideDatabaseQuotaForSecurityOrigin:(id)arg2 currentQuota:(unsigned long long)arg3 currentOriginUsage:(unsigned long long)arg4 currentDatabaseUsage:(unsigned long long)arg5 expectedUsage:(unsigned long long)arg6 decisionHandler:(CDUnknownBlockType)arg7;
- (id)_presentingViewControllerForWebView:(id)arg1;
- (_Bool)_webView:(id)arg1 shouldIncludeAppLinkActionsForElement:(id)arg2;
- (struct CGRect)sourceRectForPopoverActionPicker:(id)arg1;
- (id)presentingViewControllerForAction:(id)arg1;
- (id)_webView:(id)arg1 alternateURLFromImage:(id)arg2 userInfo:(id *)arg3;
- (void)_webViewFullscreenMayReturnToInline:(id)arg1;
- (void)webViewDidClose:(id)arg1;
- (void)_webView:(id)arg1 takeFocus:(long long)arg2;
- (void)_webView:(id)arg1 createWebViewWithConfiguration:(id)arg2 forNavigationAction:(id)arg3 windowFeatures:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 requestStorageAccessPanelForDomain:(id)arg2 underCurrentDomain:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptTextInputPanelWithPrompt:(id)arg2 defaultText:(id)arg3 initiatedByFrame:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)webView:(id)arg1 runJavaScriptConfirmPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)webView:(id)arg1 runJavaScriptAlertPanelWithMessage:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 mediaCaptureStateDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 checkUserMediaPermissionForURL:(id)arg2 mainFrameURL:(id)arg3 frameIdentifier:(unsigned long long)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 requestUserMediaAuthorizationForDevices:(unsigned long long)arg2 url:(id)arg3 mainFrameURL:(id)arg4 decisionHandler:(CDUnknownBlockType)arg5;
- (void)_webView:(id)arg1 willGoToBackForwardListItem:(id)arg2 inPageCache:(_Bool)arg3;
- (void)_webView:(id)arg1 willSnapshotBackForwardListItem:(id)arg2;
- (void)_webViewDidEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewWillEndNavigationGesture:(id)arg1 withNavigationToBackForwardListItem:(id)arg2;
- (void)_webViewDidBeginNavigationGesture:(id)arg1;
- (void)_webView:(id)arg1 didFinishLoadForQuickLookDocumentInMainFrame:(id)arg2;
- (void)_webView:(id)arg1 didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)arg2 uti:(id)arg3;
- (id)_webCryptoMasterKeyForWebView:(id)arg1;
- (void)_webViewWebProcessDidCrash:(id)arg1;
- (void)_webView:(id)arg1 renderingProgressDidChange:(unsigned long long)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didSameDocumentNavigation:(long long)arg3;
- (void)_webView:(id)arg1 didNegotiateModernTLS:(id)arg2;
- (void)_webView:(id)arg1 authenticationChallenge:(id)arg2 shouldAllowLegacyTLS:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didReceiveAuthenticationChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (_Bool)isAutomationEnabledForLinkPreviewHelper:(id)arg1;
- (_Bool)isPrivateBrowsingEnabledForPreviewHelper:(id)arg1;
- (void)linkPreviewHelperWillOpenUniveralLinkLocally:(id)arg1;
- (void)linkPreviewHelper:(id)arg1 addURLToReadingList:(id)arg2;
- (void)linkPreviewHelperWillBeginDownload:(id)arg1;
- (void)linkPreviewHelper:(id)arg1 didProduceNavigationIntent:(id)arg2 forAction:(long long)arg3;
- (void)linkPreviewHelper:(id)arg1 redirectToExternalNavigationResult:(id)arg2;
- (id)linkPreviewHelper:(id)arg1 resultOfLoadingURL:(id)arg2;
- (_Bool)linkPreviewHelper:(id)arg1 supportsAction:(long long)arg2 forURL:(id)arg3;
- (void)linkPreviewHelper:(id)arg1 commitPreviewViewControllerForAction:(long long)arg2;
- (id)linkPreviewHelper:(id)arg1 previewViewControllerForURL:(id)arg2;
- (void)_webView:(id)arg1 contextMenuDidEndForElement:(id)arg2;
- (void)_webView:(id)arg1 contextMenuForElement:(id)arg2 willCommitWithAnimator:(id)arg3;
- (void)_webView:(id)arg1 contextMenuWillPresentForElement:(id)arg2;
- (void)_webView:(id)arg1 contextMenuConfigurationForElement:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)_webView:(id)arg1 gestureRecognizerCouldPinch:(id)arg2;
- (void)_webView:(id)arg1 navigationDidFinishDocumentLoad:(id)arg2;
- (void)_webView:(id)arg1 navigation:(id)arg2 didFailProvisionalLoadInSubframe:(id)arg3 withError:(id)arg4;
- (void)webView:(id)arg1 didCommitNavigation:(id)arg2;
- (void)panel:(id)arg1 decidePolicyForLocalAuthenticatorWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)panel:(id)arg1 selectAssertionResponse:(id)arg2 source:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)panel:(id)arg1 requestPINWithRemainingRetries:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)panel:(id)arg1 dismissWebAuthenticationPanelWithResult:(long long)arg2;
- (void)panel:(id)arg1 updateWebAuthenticationPanel:(long long)arg2;
- (void)_webView:(id)arg1 runWebAuthenticationPanel:(id)arg2 initiatedByFrame:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)arg2 forExtension:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_webView:(id)arg1 contentRuleListWithIdentifier:(id)arg2 performedAction:(id)arg3 forURL:(id)arg4;
- (void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 preferences:(id)arg3 decisionHandler:(CDUnknownBlockType)arg4;
- (void)muteMediaCapture;
@property(readonly, nonatomic) _Bool audioOnly;
@property(readonly, nonatomic) _Bool canOverrideStatusBar;
- (void)statusBarIndicatorTappedWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)sfWebView:(id)arg1 didStartDownload:(id)arg2;
- (void)sfWebViewDidEndFormControlInteraction:(id)arg1;
- (void)sfWebViewDidStartFormControlInteraction:(id)arg1;
- (void)sfWebViewDidBecomeFirstResponder:(id)arg1;
- (void)sfWebViewDidChangeSafeAreaInsets:(id)arg1;
- (id)suggestedFileExtensionForQuickLookDocument:(id)arg1;
- (id)suggestedFileNameForQuickLookDocument:(id)arg1;
- (id)dataForQuickLookDocument:(id)arg1;
- (_Bool)hasFailedURL;
- (id)expectedOrCurrentURL;
@property(readonly, nonatomic) NSString *URLString;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)_initWithBrowserController:(id)arg1 configuration:(id)arg2;
- (void)downloadShouldContinueAfterReceivingResponse:(id)arg1 decisionHandler:(CDUnknownBlockType)arg2;
- (void)downloadDidFinish:(id)arg1;
- (void)downloadDidFail:(id)arg1;
- (void)downloadDidStart:(id)arg1;
- (_Bool)canGoBack;
@property(nonatomic, getter=isShowingContinuous) _Bool showingContinuous; // @synthesize showingContinuous=_showingContinuous;
@property(readonly, nonatomic) NSURL *URLForPerSitePreferences;
@property(readonly, nonatomic) _Bool canHideToolbar;
- (void)perSiteSettingsUIPresentSettings;
@property(readonly, nonatomic) id <SFReaderContext> readerContext;
@property(readonly, nonatomic) _SFWebView *activeWebView;
- (void)reloadEnablingContentBlockers:(_Bool)arg1;
- (id)loadURL:(id)arg1 userDriven:(_Bool)arg2;
- (void)handleNavigationIntent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dispatchNavigationIntent:(id)arg1;
@property(readonly, copy, nonatomic) NSString *title;
- (id)currentFluidProgressStateSource;
- (void)fluidProgressRocketAnimationDidComplete;
- (void)clearFluidProgressState;
- (_Bool)createFluidProgressState;
@property(readonly, nonatomic, getter=isContentReady) _Bool contentReady;
@property(readonly, nonatomic) double estimatedProgress;
@property(readonly, nonatomic) UIView *frontView;
- (void)_translationAvailabilityDidChange:(id)arg1;
- (void)_searchEngineControllerDidFinishPopulating:(id)arg1;
- (void)webView:(id)arg1 shouldLoadIconWithParameters:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, copy) NSString *description;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

