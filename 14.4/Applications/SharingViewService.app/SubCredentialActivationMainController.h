//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SVSBaseMainController.h"

@class NSArray, NSString, SFAppContent, SVSCommonNavController, SubCredentialActivationStartViewController, UIImage, UIStoryboard;

@interface SubCredentialActivationMainController : SVSBaseMainController
{
    _Bool _activated;
    _Bool _appeared;
    NSString *_appName;
    UIImage *_appIconImage;
    _Bool _dismissed;
    UIStoryboard *_storyboard;
    SVSCommonNavController *_vcNav;
    SubCredentialActivationStartViewController *_vcStart;
    _Bool _appInfoDownloadEnabled;
    SFAppContent *_appContent;
    NSArray *_adamIDs;
    NSString *_appStoreURL;
    NSString *_cardSubtitle;
    NSString *_cardTitle;
    NSString *_issuerID;
    NSString *_launchURL;
}

+ (_Bool)_isSecureForRemoteViewService;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *launchURL; // @synthesize launchURL=_launchURL;
@property(copy, nonatomic) NSString *issuerID; // @synthesize issuerID=_issuerID;
@property(copy, nonatomic) NSString *cardTitle; // @synthesize cardTitle=_cardTitle;
@property(copy, nonatomic) NSString *cardSubtitle; // @synthesize cardSubtitle=_cardSubtitle;
@property(copy, nonatomic) NSString *appStoreURL; // @synthesize appStoreURL=_appStoreURL;
@property(nonatomic) _Bool appInfoDownloadEnabled; // @synthesize appInfoDownloadEnabled=_appInfoDownloadEnabled;
@property(copy, nonatomic) NSArray *adamIDs; // @synthesize adamIDs=_adamIDs;
@property(retain, nonatomic) SFAppContent *appContent; // @synthesize appContent=_appContent;
- (void)dismissAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismiss:(int)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewUpdateAppInfo;
- (void)viewPresentStartViewControllerIfReady;
- (void)viewFetchContent;
- (unsigned long long)supportedInterfaceOrientations;
- (void)configureWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)_canShowWhileLocked;

@end

